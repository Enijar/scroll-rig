{"version":3,"file":"318.9832fa83.chunk.js","mappings":"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","sources":["webpack://scroll-rig/./demo/examples/webgl-scroll/styles.ts","webpack://scroll-rig/./demo/examples/webgl-scroll/manager.tsx","webpack://scroll-rig/./demo/examples/webgl-scroll/shoe.glb","webpack://scroll-rig/./demo/examples/webgl-scroll/utils.ts","webpack://scroll-rig/./demo/examples/webgl-scroll/element.tsx","webpack://scroll-rig/./demo/examples/webgl-scroll/scene.tsx","webpack://scroll-rig/./demo/examples/webgl-scroll/webgl-scroll.tsx","webpack://scroll-rig/./lib/styles.ts","webpack://scroll-rig/./lib/utils.ts","webpack://scroll-rig/./lib/scroll-rig.tsx","webpack://scroll-rig/./lib/hooks/use-wheel-events.ts","webpack://scroll-rig/./lib/hooks/use-touch-events.ts","webpack://scroll-rig/./lib/hooks/use-key-events.ts","webpack://scroll-rig/./lib/hooks/use-focus-events.ts","webpack://scroll-rig/./lib/hooks/use-mouse-events.ts","webpack://scroll-rig/./lib/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  height: 100%;\n\n  h2 {\n    text-align: center;\n    line-height: 1em;\n\n    small {\n      font-size: 0.6em;\n    }\n  }\n`;\n\nexport const Box = styled.div`\n  height: 100vh;\n  color: #fefefe;\n  margin-bottom: 1em;\n  margin-left: auto;\n  margin-right: auto;\n\n  :last-child {\n    margin-bottom: 0;\n  }\n`;\n\nexport const SceneWrapper = styled.div`\n  pointer-events: none;\n  position: absolute;\n  inset: 0;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const ProgressBar = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 0.5em;\n  background-color: #666;\n`;\n","import React from \"react\";\n\nexport default function Manager() {\n  return <group />;\n}\n","export default __webpack_public_path__ + \"59c2010091e8f59c0b53e44e39694576.glb\";","export function deg2rad(deg: number): number {\n  return deg * (Math.PI / 180);\n}\n\nexport function map(\n  value: number,\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number\n): number {\n  return ((value - x1) * (y2 - x2)) / (y1 - x1) + x2;\n}\n\n\nexport function clamp(value: number, min: number, max: number): number {\n  return Math.min(Math.max(value, min), max);\n}\n","import React from \"react\";\nimport * as THREE from \"three\";\nimport { useFrame } from \"@react-three/fiber\";\nimport { useGLTF } from \"@react-three/drei\";\nimport shoe from \"./shoe.glb\";\nimport { State } from \"../../../lib\";\nimport { deg2rad } from \"./utils\";\n\ntype Props = {\n  scrollState: State;\n};\n\nexport default function Element({ scrollState }: Props) {\n  const groupRef = React.useRef<THREE.Group>(null);\n\n  const gltf = useGLTF(shoe);\n\n  useFrame(({ clock }) => {\n    if (groupRef.current === null) return;\n    if (!scrollState) return;\n    groupRef.current.rotation.y = deg2rad(360 * -scrollState.progress.y - 90);\n    groupRef.current.rotation.x =\n      deg2rad(Math.cos(clock.getElapsedTime()) * -5) + deg2rad(45);\n    groupRef.current.rotation.z = deg2rad(\n      Math.sin(clock.getElapsedTime()) * 20\n    );\n  });\n\n  return (\n    <group scale={10} ref={groupRef}>\n      {/* @ts-ignore */}\n      <primitive object={gltf.scene} />\n    </group>\n  );\n}\n","import React from \"react\";\nimport { Canvas } from \"@react-three/fiber\";\nimport { PerspectiveCamera } from \"@react-three/drei\";\nimport { SceneWrapper } from \"./styles\";\nimport Manager from \"./manager\";\nimport Element from \"./element\";\nimport { State } from \"../../../lib\";\n\ntype Props = {\n  scrollState: State;\n};\n\nexport default function Scene({ scrollState }: Props) {\n  return (\n    <SceneWrapper>\n      <Canvas>\n        <Manager />\n        <Element scrollState={scrollState} />\n        <ambientLight />\n        <PerspectiveCamera />\n      </Canvas>\n    </SceneWrapper>\n  );\n}\n","import React from \"react\";\nimport { Box, Wrapper, ProgressBar } from \"./styles\";\nimport ScrollRig, { State } from \"../../../lib\";\nimport Scene from \"./scene\";\n\nexport default function WebglScroll() {\n  const [scrollState, setScrollState] = React.useState<State | null>(null);\n\n  const progressBarRef = React.useRef<HTMLDivElement>();\n  const boxRefs = React.useRef<HTMLDivElement[]>([]);\n\n  const onScrollUpdate = React.useCallback((state: State) => {\n    setScrollState(state);\n\n    progressBarRef.current.style.width = `${100 * state.progress.y}%`;\n\n    const height = window.innerHeight;\n    let i = 0;\n    for (const box of boxRefs.current) {\n      const { top } = box.getBoundingClientRect();\n      box.style.color = `hsl(${360 * i * state.progress.y}, 50%, 50%)`;\n      if (top >= 0 && top <= height) {\n        const t = 1 - (1 / height) * top;\n        const progress = (t + 0.5) / 2;\n        box.style.transform = `translate(-${progress * 45}%, 0%)`;\n      }\n      i++;\n    }\n  }, []);\n\n  return (\n    <Wrapper>\n      <ProgressBar ref={progressBarRef} />\n      <ScrollRig onScrollUpdate={onScrollUpdate}>\n        <Box ref={(ref) => (boxRefs.current[0] = ref)}>\n          <h2>Welcome</h2>\n        </Box>\n        <Box ref={(ref) => (boxRefs.current[1] = ref)}>\n          <h2>This is a Shoe</h2>\n        </Box>\n        <Box ref={(ref) => (boxRefs.current[2] = ref)}>\n          <h2>Here's the Back</h2>\n        </Box>\n        <Box ref={(ref) => (boxRefs.current[3] = ref)}>\n          <h2>And here's the font</h2>\n        </Box>\n      </ScrollRig>\n      <Scene scrollState={scrollState} />\n    </Wrapper>\n  );\n}\n","import styled, { css } from \"styled-components\";\n\nexport const ScrollWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  position: relative;\n`;\n\nexport const ScrollPlane = styled.div`\n  will-change: transform;\n  white-space: nowrap;\n`;\n\ntype ScrollBarsProps = {\n  size: string;\n};\n\nexport const ScrollBarHandle = styled.div`\n  will-change: transform;\n  background-color: #c7c7c7;\n  position: relative;\n  min-height: 2em;\n  border-radius: 2em;\n`;\n\ntype ScrollBarProps = {\n  axis: \"x\" | \"y\";\n  size: string;\n};\n\nexport const ScrollBar = styled.div<ScrollBarProps>`\n  pointer-events: all;\n  background-color: #fafafa;\n\n  :hover {\n    ${ScrollBarHandle} {\n      background-color: #878787;\n    }\n  }\n\n  ${({ axis, size }) => {\n    if (axis === \"x\") {\n      return css`\n        width: 100%;\n        height: ${size};\n        margin-top: auto;\n        padding-left: calc(${size} / 4);\n        padding-right: calc(${size} / 4);\n\n        ${ScrollBarHandle} {\n          min-height: calc(100% - (${size} / 2));\n          width: 0;\n          margin-top: auto;\n          margin-bottom: auto;\n        }\n      `;\n    }\n    return css`\n      height: 100%;\n      width: ${size};\n      margin-left: auto;\n      padding-top: calc(${size} / 4);\n      padding-bottom: calc(${size} / 4);\n\n      ${ScrollBarHandle} {\n        width: calc(100% - (${size} / 2));\n        height: 0;\n        margin-left: auto;\n        margin-right: auto;\n      }\n    `;\n  }}\n`;\n\nexport const ScrollBars = styled.div<ScrollBarsProps>`\n  position: absolute;\n  pointer-events: none;\n  user-select: none;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n`;\n","export function clamp(value: number, min: number, max: number): number {\n  return Math.min(Math.max(value, min), max);\n}\n\nexport function map(\n  value: number,\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number\n): number {\n  return ((value - x1) * (y2 - x2)) / (y1 - x1) + x2;\n}\n","import React from \"react\";\nimport {\n  ScrollBar,\n  ScrollBarHandle,\n  ScrollBars,\n  ScrollPlane,\n  ScrollWrapper,\n} from \"./styles\";\nimport { Props, State, Touch, OnScroll, ScrollApi } from \"./types\";\nimport { clamp } from \"./utils\";\nimport useKeyEvents from \"./hooks/use-key-events\";\nimport useTouchEvents from \"./hooks/use-touch-events\";\nimport useFocusEvents from \"./hooks/use-focus-events\";\nimport useMouseEvents from \"./hooks/use-mouse-events\";\nimport useWheelEvents from \"./hooks/use-wheel-events\";\n\nconst DEFAULT_STYLE = {};\n\nfunction ScrollRig(\n  {\n    children,\n    native = false,\n    scrollBarSize = \"15px\",\n    style = DEFAULT_STYLE,\n    controlled = false,\n    onScrollUpdate,\n    classNamePrefix = \"scroll-rig\",\n    ...props\n  }: Props,\n  ref: React.ForwardedRef<ScrollApi>\n) {\n  const touchRef = React.useRef<Touch>({\n    down: false,\n    lastX: 0,\n    lastY: 0,\n    currentX: 0,\n    currentY: 0,\n  });\n\n  const stateRef = React.useRef<State>({\n    maxScroll: {\n      x: 0,\n      y: 0,\n    },\n    wrapperSize: {\n      width: 0,\n      height: 0,\n    },\n    progress: {\n      x: 0,\n      y: 0,\n    },\n    scroll: {\n      x: 0,\n      y: 0,\n    },\n    isScrolling: false,\n    locked: false,\n  });\n\n  const wrapperRef = React.useRef<HTMLDivElement>(null);\n  const planeRef = React.useRef<HTMLDivElement>(null);\n  const scrollBarsRef = React.useRef<HTMLDivElement>(null);\n  const scrollBarXRef = React.useRef<HTMLDivElement>(null);\n  const scrollBarYRef = React.useRef<HTMLDivElement>(null);\n  const scrollBarHandleXRef = React.useRef<HTMLDivElement>(null);\n  const scrollBarHandleYRef = React.useRef<HTMLDivElement>(null);\n\n  const initialisedRef = React.useRef(false);\n\n  const update = React.useCallback(() => {\n    const wrapper = wrapperRef.current;\n    const plane = planeRef.current;\n    const scrollBarX = scrollBarXRef.current;\n    const scrollBarY = scrollBarYRef.current;\n    const scrollBarHandleX = scrollBarHandleXRef.current;\n    const scrollBarHandleY = scrollBarHandleYRef.current;\n\n    if (native) return;\n    if (plane === null) return;\n    if (scrollBarX === null) return;\n    if (scrollBarY === null) return;\n\n    wrapper.scrollTop = 0;\n    wrapper.scrollLeft = 0;\n    stateRef.current.wrapperSize.width = wrapper.offsetWidth;\n    stateRef.current.wrapperSize.height = wrapper.offsetHeight;\n    stateRef.current.maxScroll.x = Math.max(\n      0,\n      plane.scrollWidth - wrapper.offsetWidth\n    );\n    stateRef.current.maxScroll.y = Math.max(\n      0,\n      plane.scrollHeight - wrapper.offsetHeight\n    );\n    scrollBarX.style.display =\n      stateRef.current.maxScroll.x === 0 ? \"none\" : \"flex\";\n    scrollBarY.style.display =\n      stateRef.current.maxScroll.y === 0 ? \"none\" : \"flex\";\n\n    if (stateRef.current.maxScroll.x > 0) {\n      scrollBarHandleX.style.left = `${stateRef.current.progress.x * 100}%`;\n      scrollBarHandleX.style.transform = `translateX(${\n        stateRef.current.progress.x * -100\n      }%)`;\n      scrollBarHandleX.style.width = `${\n        (wrapper.offsetWidth /\n          (stateRef.current.maxScroll.x + wrapper.offsetWidth)) *\n        100\n      }%`;\n    }\n\n    if (stateRef.current.maxScroll.y > 0) {\n      scrollBarHandleY.style.top = `${stateRef.current.progress.y * 100}%`;\n      scrollBarHandleY.style.transform = `translateY(${\n        stateRef.current.progress.y * -100\n      }%)`;\n      scrollBarHandleY.style.height = `${\n        (wrapper.offsetHeight /\n          (stateRef.current.maxScroll.y + wrapper.offsetHeight)) *\n        100\n      }%`;\n    }\n\n    scrollBarX.style.transform =\n      stateRef.current.maxScroll.x === 0\n        ? \"none\"\n        : `translateY(-${scrollBarSize})`;\n\n    scrollBarX.style.paddingRight =\n      stateRef.current.maxScroll.y === 0 ? \"0px\" : scrollBarSize;\n    scrollBarY.style.paddingBottom =\n      stateRef.current.maxScroll.x === 0\n        ? `calc(${scrollBarSize} / 4)`\n        : scrollBarSize;\n\n    plane.style.maxHeight =\n      stateRef.current.maxScroll.x === 0\n        ? \"unset\"\n        : `calc(100% - ${scrollBarSize})`;\n    plane.style.maxWidth =\n      stateRef.current.maxScroll.y === 0\n        ? \"unset\"\n        : `calc(100% - ${scrollBarSize})`;\n\n    const offsetX =\n      stateRef.current.wrapperSize.width * stateRef.current.progress.x;\n    const offsetY =\n      stateRef.current.wrapperSize.height * stateRef.current.progress.y;\n    const scrollOffsetX =\n      stateRef.current.maxScroll.y > 0 ? scrollBarSize : \"0px\";\n    const scrollOffsetY =\n      stateRef.current.maxScroll.x > 0 ? scrollBarSize : \"0px\";\n    const translate = {\n      x:\n        stateRef.current.maxScroll.x === 0\n          ? \"0px\"\n          : `(${stateRef.current.progress.x} * -100%) + ${offsetX}px - ${scrollOffsetX}`,\n      y:\n        stateRef.current.maxScroll.y === 0\n          ? \"0px\"\n          : `(${stateRef.current.progress.y} * -100%) + ${offsetY}px - ${scrollOffsetY}`,\n    };\n    plane.style.transform = `translate3d(calc(${translate.x}), calc(${translate.y}), 0px)`;\n\n    stateRef.current.scroll.x =\n      stateRef.current.progress.x * stateRef.current.maxScroll.x;\n    stateRef.current.scroll.y =\n      stateRef.current.progress.y * stateRef.current.maxScroll.y;\n\n    // Call user scroll listener(s)\n    if (stateRef.current.isScrolling) {\n      if (onScrollUpdateRef.current) {\n        onScrollUpdateRef.current(stateRef.current);\n      }\n      if (onScrollHandleRef.current !== null) {\n        onScrollHandleRef.current(stateRef.current);\n      }\n    }\n\n    if (!initialisedRef.current) {\n      initialisedRef.current = true;\n      if (onScrollUpdateRef.current) {\n        onScrollUpdateRef.current(stateRef.current);\n      }\n    }\n\n    stateRef.current.isScrolling = false;\n  }, [controlled, native]);\n\n  const updateProgress = React.useCallback(\n    (dirX: number, dirY: number, distX: number, distY: number) => {\n      const state = stateRef.current;\n      if (state.locked) return;\n      const maxX = state.maxScroll.x;\n      const maxY = state.maxScroll.y;\n      const velocityX = dirX === 0 ? 0 : (1 / maxX) * distX * dirX;\n      const velocityY = dirY === 0 ? 0 : (1 / maxY) * distY * dirY;\n      state.progress.x = clamp(state.progress.x + velocityX, 0, 1);\n      state.progress.y = clamp(state.progress.y + velocityY, 0, 1);\n      update();\n    },\n    []\n  );\n\n  const onScrollUpdateRef = React.useRef(onScrollUpdate);\n  React.useEffect(() => {\n    onScrollUpdateRef.current = onScrollUpdate;\n  }, [onScrollUpdate]);\n\n  const onScrollHandleRef = React.useRef<OnScroll | null>(null);\n\n  const handleScroll = React.useCallback((onScroll: OnScroll) => {\n    onScrollHandleRef.current = onScroll;\n  }, []);\n\n  React.useEffect(() => {\n    if (ref === null) return;\n    (ref as React.MutableRefObject<ScrollApi>).current = {\n      update,\n      onScroll: handleScroll,\n      state: stateRef.current,\n    };\n  }, [ref, update, handleScroll]);\n\n  React.useEffect(() => {\n    const wrapper = wrapperRef.current;\n    if (!native) return;\n    wrapper.scrollLeft =\n      (wrapper.scrollWidth - wrapper.offsetWidth) * stateRef.current.progress.x;\n    wrapper.scrollTop =\n      (wrapper.scrollHeight - wrapper.offsetHeight) *\n      stateRef.current.progress.y;\n    update();\n  }, [native, update]);\n\n  React.useEffect(() => {\n    if (controlled) return;\n\n    let nextFrame: number;\n    (function tick() {\n      nextFrame = requestAnimationFrame(tick);\n      update();\n    })();\n\n    return () => cancelAnimationFrame(nextFrame);\n  }, [native, controlled, update]);\n\n  useWheelEvents(stateRef, wrapperRef, planeRef, native, updateProgress);\n  useTouchEvents(stateRef, wrapperRef, planeRef, touchRef, updateProgress);\n  useKeyEvents(stateRef, update);\n  useFocusEvents(stateRef, wrapperRef, planeRef, update);\n  useMouseEvents(\n    stateRef,\n    wrapperRef,\n    scrollBarHandleXRef,\n    scrollBarHandleYRef,\n    update\n  );\n\n  return (\n    <ScrollWrapper\n      {...props}\n      ref={wrapperRef}\n      style={{ overflow: native ? \"auto\" : \"hidden\" }}\n      className={classNamePrefix}\n    >\n      <ScrollPlane\n        className={`${classNamePrefix}-plane`}\n        ref={planeRef}\n        style={{ ...style, transform: native ? \"none\" : undefined }}\n      >\n        {children}\n      </ScrollPlane>\n      <ScrollBars\n        className={`${classNamePrefix}-scroll-bars`}\n        ref={scrollBarsRef}\n        size={scrollBarSize}\n        style={{ display: native ? \"none\" : undefined }}\n      >\n        <ScrollBar\n          className={`${classNamePrefix}-scroll-bar ${classNamePrefix}-scroll-bar-y`}\n          axis=\"y\"\n          size={scrollBarSize}\n          ref={scrollBarYRef}\n        >\n          <ScrollBarHandle\n            className={`${classNamePrefix}-scroll-bar-handle ${classNamePrefix}-scroll-bar-handle-y`}\n            ref={scrollBarHandleYRef}\n          />\n        </ScrollBar>\n        <ScrollBar\n          className={`${classNamePrefix}-scroll-bar ${classNamePrefix}-scroll-bar-x`}\n          axis=\"x\"\n          size={scrollBarSize}\n          ref={scrollBarXRef}\n        >\n          <ScrollBarHandle\n            className={`${classNamePrefix}-scroll-bar-handle ${classNamePrefix}-scroll-bar-handle-x`}\n            ref={scrollBarHandleXRef}\n          />\n        </ScrollBar>\n      </ScrollBars>\n    </ScrollWrapper>\n  );\n}\n\nexport default React.forwardRef(ScrollRig);\n","import React from \"react\";\nimport { State } from \"../types\";\n\nexport default function useWheelEvents(\n  stateRef: React.MutableRefObject<State>,\n  wrapperRef: React.MutableRefObject<HTMLDivElement>,\n  planeRef: React.MutableRefObject<HTMLDivElement>,\n  native: boolean,\n  updateProgress: Function\n) {\n  React.useEffect(() => {\n    function onWheel(event: WheelEvent) {\n      if (native) return;\n      if (planeRef.current === null) return;\n      const element = event.target as HTMLElement;\n      const dirX = event.deltaX === 0 ? 0 : Math.sign(event.deltaX);\n      const dirY = event.deltaY === 0 ? 0 : Math.sign(event.deltaY);\n      const distX = Math.abs(event.deltaX);\n      const distY = Math.abs(event.deltaY);\n      if (\n        element === planeRef.current ||\n        element === wrapperRef.current ||\n        wrapperRef.current.contains(element)\n      ) {\n        stateRef.current.isScrolling = true;\n        updateProgress(dirX, dirY, distX, distY);\n      }\n    }\n\n    window.addEventListener(\"wheel\", onWheel);\n    return () => {\n      window.removeEventListener(\"wheel\", onWheel);\n    };\n  }, [native, updateProgress]);\n}\n","import React from \"react\";\nimport { State, Touch } from \"../types\";\n\nexport default function useTouchEvents(\n  stateRef: React.MutableRefObject<State>,\n  wrapperRef: React.MutableRefObject<HTMLDivElement>,\n  planeRef: React.MutableRefObject<HTMLDivElement>,\n  touchRef: React.MutableRefObject<Touch>,\n  updateProgress: Function\n) {\n  React.useEffect(() => {\n    function onTouchStart(event: TouchEvent) {\n      if (wrapperRef.current === null || planeRef.current === null) return;\n      const element = event.target as HTMLElement;\n      if (\n        element === planeRef.current ||\n        element === wrapperRef.current ||\n        wrapperRef.current.contains(element)\n      ) {\n        const { pageX, pageY } = event.touches[0] ?? {};\n        touchRef.current.down = true;\n        touchRef.current.lastX = pageX;\n        touchRef.current.lastY = pageY;\n      }\n    }\n\n    function onTouchMove(event: TouchEvent) {\n      if (!touchRef.current.down) return;\n      const touch = touchRef.current;\n      const { pageX, pageY } = event.touches[0] ?? {};\n      touch.currentX = pageX;\n      touch.currentY = pageY;\n      const deltaX = touch.lastX - touch.currentX;\n      const deltaY = touch.lastY - touch.currentY;\n      const dirX = deltaX === 0 ? 0 : Math.sign(deltaX);\n      const dirY = deltaY === 0 ? 0 : Math.sign(deltaY);\n      const distX = Math.abs(deltaX);\n      const distY = Math.abs(deltaY);\n      stateRef.current.isScrolling = true;\n      updateProgress(dirX, dirY, distX, distY);\n      touch.lastX = pageX;\n      touch.lastY = pageY;\n    }\n\n    function onTouchEnd() {\n      touchRef.current.down = false;\n    }\n\n    window.addEventListener(\"touchstart\", onTouchStart);\n    window.addEventListener(\"touchmove\", onTouchMove);\n    window.addEventListener(\"touchend\", onTouchEnd);\n    return () => {\n      window.removeEventListener(\"touchstart\", onTouchStart);\n      window.removeEventListener(\"touchmove\", onTouchMove);\n      window.removeEventListener(\"touchend\", onTouchEnd);\n    };\n  }, [updateProgress]);\n}\n","import React from \"react\";\nimport { State } from \"../types\";\n\nexport default function useKeyEvents(\n  stateRef: React.MutableRefObject<State>,\n  update: Function\n) {\n  React.useEffect(() => {\n    function onKeyDown(event: KeyboardEvent) {\n      if (!event.metaKey) return;\n      switch (event.key) {\n        case \"ArrowRight\":\n          stateRef.current.progress.x = 1;\n          break;\n        case \"ArrowLeft\":\n          stateRef.current.progress.x = 0;\n          break;\n        case \"ArrowDown\":\n          stateRef.current.progress.y = 1;\n          break;\n        case \"ArrowUp\":\n          stateRef.current.progress.y = 0;\n          break;\n      }\n      update();\n    }\n\n    window.addEventListener(\"keydown\", onKeyDown);\n    return () => {\n      window.removeEventListener(\"keydown\", onKeyDown);\n    };\n  }, [update]);\n}\n","import React from \"react\";\nimport { clamp } from \"../utils\";\nimport { State } from \"../types\";\n\nexport default function useFocusEvents(\n  stateRef: React.MutableRefObject<State>,\n  wrapperRef: React.MutableRefObject<HTMLDivElement>,\n  planeRef: React.MutableRefObject<HTMLDivElement>,\n  update: Function\n) {\n  React.useEffect(() => {\n    function onFocus(event: FocusEvent) {\n      const wrapper = wrapperRef.current;\n      const plane = planeRef.current;\n      if (wrapper === null) return;\n      if (plane === null) return;\n      const element = event.target as HTMLElement;\n      const offsetLeft = Math.max(\n        0,\n        (element.offsetLeft ?? 0) - wrapper.offsetWidth\n      );\n      const offsetTop = Math.max(\n        0,\n        (element.offsetTop ?? 0) - wrapper.offsetHeight\n      );\n      const maxX = plane.offsetWidth - wrapper.offsetWidth;\n      const maxY = plane.offsetHeight - wrapper.offsetHeight;\n\n      if (offsetLeft) {\n        stateRef.current.progress.x = clamp(\n          (1 / maxX) * (offsetLeft + element.offsetWidth),\n          0,\n          1\n        );\n        if (stateRef.current.progress.x >= 0.99) {\n          stateRef.current.progress.x = 1;\n        }\n      }\n\n      if (offsetTop) {\n        stateRef.current.progress.y = clamp(\n          (1 / maxY) * (offsetTop + element.offsetHeight),\n          0,\n          1\n        );\n        if (stateRef.current.progress.y >= 0.99) {\n          stateRef.current.progress.y = 1;\n        }\n      }\n\n      update();\n    }\n\n    window.addEventListener(\"focus\", onFocus, { capture: true });\n    return () => {\n      window.removeEventListener(\"focus\", onFocus, { capture: true });\n    };\n  }, [update]);\n}\n","import React from \"react\";\nimport { clamp } from \"../utils\";\nimport { State, Touch } from \"../types\";\n\nexport default function useMouseEvents(\n  stateRef: React.MutableRefObject<State>,\n  wrapperRef: React.MutableRefObject<HTMLDivElement>,\n  scrollBarHandleXRef: React.MutableRefObject<HTMLDivElement>,\n  scrollBarHandleYRef: React.MutableRefObject<HTMLDivElement>,\n  update: Function\n) {\n  React.useEffect(() => {\n    let dragging = false;\n    let startX = 0;\n    let startY = 0;\n    let offsetX = 0;\n    let offsetY = 0;\n\n    function onMouseDown(event: MouseEvent) {\n      dragging = true;\n      startX = event.pageX - wrapperRef.current.offsetLeft;\n      startY = event.pageY - wrapperRef.current.offsetTop;\n      offsetX = Math.abs(startX - scrollBarHandleXRef.current.offsetLeft);\n      offsetY = Math.abs(startY - scrollBarHandleYRef.current.offsetTop);\n    }\n\n    function onMouseMove(event: MouseEvent) {\n      if (!dragging) return;\n\n      const x = event.pageX - wrapperRef.current.offsetLeft - offsetX;\n      const y = event.pageY - wrapperRef.current.offsetTop - offsetY;\n\n      const maxX =\n        wrapperRef.current.offsetHeight -\n        scrollBarHandleXRef.current.offsetWidth;\n      const maxY =\n        wrapperRef.current.offsetHeight -\n        scrollBarHandleYRef.current.offsetHeight;\n\n      const progressX = (1 / maxX) * x;\n      const progressY = (1 / maxY) * y;\n\n      stateRef.current.progress.x = clamp(progressX, 0, 1);\n      stateRef.current.progress.y = clamp(progressY, 0, 1);\n      stateRef.current.isScrolling = true;\n      update();\n    }\n\n    function onMouseUp() {\n      dragging = false;\n    }\n\n    scrollBarHandleXRef.current.addEventListener(\"mousedown\", onMouseDown);\n    scrollBarHandleYRef.current.addEventListener(\"mousedown\", onMouseDown);\n    window.addEventListener(\"mousemove\", onMouseMove);\n    window.addEventListener(\"mouseup\", onMouseUp);\n  }, [update]);\n}\n","import ScrollRig from \"./scroll-rig\";\n\nexport * from \"./types\";\n\nexport default ScrollRig;\n"],"names":["Wrapper","styled","Box","SceneWrapper","ProgressBar","Manager","deg2rad","deg","Math","PI","Element","scrollState","groupRef","React","gltf","useGLTF","shoe","useFrame","clock","current","rotation","y","progress","x","cos","getElapsedTime","z","sin","scale","ref","object","scene","Scene","PerspectiveCamera","WebglScroll","setScrollState","progressBarRef","boxRefs","onScrollUpdate","state","style","width","height","window","innerHeight","i","box","top","getBoundingClientRect","color","transform","ScrollWrapper","ScrollPlane","ScrollBarHandle","ScrollBar","axis","size","css","ScrollBars","clamp","value","min","max","DEFAULT_STYLE","ScrollRig","children","native","scrollBarSize","controlled","classNamePrefix","props","touchRef","down","lastX","lastY","currentX","currentY","stateRef","maxScroll","wrapperSize","scroll","isScrolling","locked","wrapperRef","planeRef","scrollBarsRef","scrollBarXRef","scrollBarYRef","scrollBarHandleXRef","scrollBarHandleYRef","initialisedRef","update","wrapper","plane","scrollBarX","scrollBarY","scrollBarHandleX","scrollBarHandleY","scrollTop","scrollLeft","offsetWidth","offsetHeight","scrollWidth","scrollHeight","display","left","paddingRight","paddingBottom","maxHeight","maxWidth","offsetX","offsetY","scrollOffsetX","scrollOffsetY","translate","onScrollUpdateRef","onScrollHandleRef","updateProgress","dirX","dirY","distX","distY","maxX","maxY","velocityX","velocityY","handleScroll","onScroll","nextFrame","tick","requestAnimationFrame","cancelAnimationFrame","onWheel","event","element","target","deltaX","sign","deltaY","abs","contains","addEventListener","removeEventListener","useWheelEvents","onTouchStart","pageX","pageY","touches","onTouchMove","touch","onTouchEnd","useTouchEvents","onKeyDown","metaKey","key","useKeyEvents","onFocus","offsetLeft","offsetTop","capture","useFocusEvents","dragging","startX","startY","onMouseDown","progressX","progressY","useMouseEvents","overflow","className","undefined"],"sourceRoot":""}