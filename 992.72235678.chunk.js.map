{"version":3,"file":"992.72235678.chunk.js","mappings":"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","sources":["webpack://scroll-rig/./demo/examples/native-comparison/styles.ts","webpack://scroll-rig/./demo/examples/native-comparison/native-comparison.tsx","webpack://scroll-rig/./lib/styles.ts","webpack://scroll-rig/./lib/utils.ts","webpack://scroll-rig/./lib/scroll-rig.tsx","webpack://scroll-rig/./lib/hooks/use-wheel-events.ts","webpack://scroll-rig/./lib/hooks/use-touch-events.ts","webpack://scroll-rig/./lib/hooks/use-key-events.ts","webpack://scroll-rig/./lib/hooks/use-focus-events.ts","webpack://scroll-rig/./lib/hooks/use-mouse-events.ts","webpack://scroll-rig/./lib/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  height: 100%;\n\n  h2 {\n    text-align: center;\n    line-height: 1em;\n\n    small {\n      font-size: 0.6em;\n    }\n  }\n`;\n\nexport const Box = styled.div`\n  height: 50vh;\n  aspect-ratio: 1 / 1;\n  background-color: crimson;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #fefefe;\n  margin-bottom: 1em;\n  margin-left: auto;\n  margin-right: auto;\n\n  :last-child {\n    margin-bottom: 0;\n  }\n`;\n","import React from \"react\";\nimport { Box, Wrapper } from \"./styles\";\nimport ScrollRig from \"../../../lib\";\n\nexport default function NativeComparison() {\n  return (\n    <Wrapper>\n      <ScrollRig onScrollUpdate={(state) => console.log(state.progress.y)}>\n        <h2>\n          Custom Scroll 👇 <br />\n          <small>(Open Console for Logs)</small>\n        </h2>\n        {Array.from({ length: 10 }).map((_, index) => {\n          return <Box key={index}>{index}</Box>;\n        })}\n      </ScrollRig>\n      <ScrollRig native className=\"scroll\">\n        <h2>Native Scroll 👇</h2>\n        {Array.from({ length: 10 }).map((_, index) => {\n          return <Box key={index}>{index}</Box>;\n        })}\n      </ScrollRig>\n    </Wrapper>\n  );\n}\n","import styled, { css } from \"styled-components\";\n\nexport const ScrollWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  position: relative;\n`;\n\nexport const ScrollPlane = styled.div`\n  will-change: transform;\n  white-space: nowrap;\n`;\n\ntype ScrollBarsProps = {\n  size: string;\n};\n\nexport const ScrollBarHandle = styled.div`\n  will-change: transform;\n  background-color: #c7c7c7;\n  position: relative;\n  min-height: 2em;\n  border-radius: 2em;\n`;\n\ntype ScrollBarProps = {\n  axis: \"x\" | \"y\";\n  size: string;\n};\n\nexport const ScrollBar = styled.div<ScrollBarProps>`\n  pointer-events: all;\n  background-color: #fafafa;\n\n  :hover {\n    ${ScrollBarHandle} {\n      background-color: #878787;\n    }\n  }\n\n  ${({ axis, size }) => {\n    if (axis === \"x\") {\n      return css`\n        width: 100%;\n        height: ${size};\n        margin-top: auto;\n        padding-left: calc(${size} / 4);\n        padding-right: calc(${size} / 4);\n\n        ${ScrollBarHandle} {\n          min-height: calc(100% - (${size} / 2));\n          width: 0;\n          margin-top: auto;\n          margin-bottom: auto;\n        }\n      `;\n    }\n    return css`\n      height: 100%;\n      width: ${size};\n      margin-left: auto;\n      padding-top: calc(${size} / 4);\n      padding-bottom: calc(${size} / 4);\n\n      ${ScrollBarHandle} {\n        width: calc(100% - (${size} / 2));\n        height: 0;\n        margin-left: auto;\n        margin-right: auto;\n      }\n    `;\n  }}\n`;\n\nexport const ScrollBars = styled.div<ScrollBarsProps>`\n  position: absolute;\n  pointer-events: none;\n  user-select: none;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n`;\n","export function clamp(value: number, min: number, max: number): number {\n  return Math.min(Math.max(value, min), max);\n}\n\nexport function map(\n  value: number,\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number\n): number {\n  return ((value - x1) * (y2 - x2)) / (y1 - x1) + x2;\n}\n","import React from \"react\";\nimport {\n  ScrollBar,\n  ScrollBarHandle,\n  ScrollBars,\n  ScrollPlane,\n  ScrollWrapper,\n} from \"./styles\";\nimport { Props, State, Touch, OnScroll, ScrollApi } from \"./types\";\nimport { clamp } from \"./utils\";\nimport useKeyEvents from \"./hooks/use-key-events\";\nimport useTouchEvents from \"./hooks/use-touch-events\";\nimport useFocusEvents from \"./hooks/use-focus-events\";\nimport useMouseEvents from \"./hooks/use-mouse-events\";\nimport useWheelEvents from \"./hooks/use-wheel-events\";\n\nconst DEFAULT_STYLE = {};\n\nfunction ScrollRig(\n  {\n    children,\n    native = false,\n    scrollBarSize = \"15px\",\n    style = DEFAULT_STYLE,\n    controlled = false,\n    onScrollUpdate,\n    classNamePrefix = \"scroll-rig\",\n    ...props\n  }: Props,\n  ref: React.ForwardedRef<ScrollApi>\n) {\n  const touchRef = React.useRef<Touch>({\n    down: false,\n    lastX: 0,\n    lastY: 0,\n    currentX: 0,\n    currentY: 0,\n  });\n\n  const stateRef = React.useRef<State>({\n    maxScroll: {\n      x: 0,\n      y: 0,\n    },\n    wrapperSize: {\n      width: 0,\n      height: 0,\n    },\n    progress: {\n      x: 0,\n      y: 0,\n    },\n    scroll: {\n      x: 0,\n      y: 0,\n    },\n    isScrolling: false,\n    locked: false,\n  });\n\n  const wrapperRef = React.useRef<HTMLDivElement>(null);\n  const planeRef = React.useRef<HTMLDivElement>(null);\n  const scrollBarsRef = React.useRef<HTMLDivElement>(null);\n  const scrollBarXRef = React.useRef<HTMLDivElement>(null);\n  const scrollBarYRef = React.useRef<HTMLDivElement>(null);\n  const scrollBarHandleXRef = React.useRef<HTMLDivElement>(null);\n  const scrollBarHandleYRef = React.useRef<HTMLDivElement>(null);\n\n  const initialisedRef = React.useRef(false);\n\n  const update = React.useCallback(() => {\n    const wrapper = wrapperRef.current;\n    const plane = planeRef.current;\n    const scrollBarX = scrollBarXRef.current;\n    const scrollBarY = scrollBarYRef.current;\n    const scrollBarHandleX = scrollBarHandleXRef.current;\n    const scrollBarHandleY = scrollBarHandleYRef.current;\n\n    if (native) return;\n    if (plane === null) return;\n    if (scrollBarX === null) return;\n    if (scrollBarY === null) return;\n\n    wrapper.scrollTop = 0;\n    wrapper.scrollLeft = 0;\n    stateRef.current.wrapperSize.width = wrapper.offsetWidth;\n    stateRef.current.wrapperSize.height = wrapper.offsetHeight;\n    stateRef.current.maxScroll.x = Math.max(\n      0,\n      plane.scrollWidth - wrapper.offsetWidth\n    );\n    stateRef.current.maxScroll.y = Math.max(\n      0,\n      plane.scrollHeight - wrapper.offsetHeight\n    );\n    scrollBarX.style.display =\n      stateRef.current.maxScroll.x === 0 ? \"none\" : \"flex\";\n    scrollBarY.style.display =\n      stateRef.current.maxScroll.y === 0 ? \"none\" : \"flex\";\n\n    if (stateRef.current.maxScroll.x > 0) {\n      scrollBarHandleX.style.left = `${stateRef.current.progress.x * 100}%`;\n      scrollBarHandleX.style.transform = `translateX(${\n        stateRef.current.progress.x * -100\n      }%)`;\n      scrollBarHandleX.style.width = `${\n        (wrapper.offsetWidth /\n          (stateRef.current.maxScroll.x + wrapper.offsetWidth)) *\n        100\n      }%`;\n    }\n\n    if (stateRef.current.maxScroll.y > 0) {\n      scrollBarHandleY.style.top = `${stateRef.current.progress.y * 100}%`;\n      scrollBarHandleY.style.transform = `translateY(${\n        stateRef.current.progress.y * -100\n      }%)`;\n      scrollBarHandleY.style.height = `${\n        (wrapper.offsetHeight /\n          (stateRef.current.maxScroll.y + wrapper.offsetHeight)) *\n        100\n      }%`;\n    }\n\n    scrollBarX.style.transform =\n      stateRef.current.maxScroll.x === 0\n        ? \"none\"\n        : `translateY(-${scrollBarSize})`;\n\n    scrollBarX.style.paddingRight =\n      stateRef.current.maxScroll.y === 0 ? \"0px\" : scrollBarSize;\n    scrollBarY.style.paddingBottom =\n      stateRef.current.maxScroll.x === 0\n        ? `calc(${scrollBarSize} / 4)`\n        : scrollBarSize;\n\n    plane.style.maxHeight =\n      stateRef.current.maxScroll.x === 0\n        ? \"unset\"\n        : `calc(100% - ${scrollBarSize})`;\n    plane.style.maxWidth =\n      stateRef.current.maxScroll.y === 0\n        ? \"unset\"\n        : `calc(100% - ${scrollBarSize})`;\n\n    const offsetX =\n      stateRef.current.wrapperSize.width * stateRef.current.progress.x;\n    const offsetY =\n      stateRef.current.wrapperSize.height * stateRef.current.progress.y;\n    const scrollOffsetX =\n      stateRef.current.maxScroll.y > 0 ? scrollBarSize : \"0px\";\n    const scrollOffsetY =\n      stateRef.current.maxScroll.x > 0 ? scrollBarSize : \"0px\";\n    const translate = {\n      x:\n        stateRef.current.maxScroll.x === 0\n          ? \"0px\"\n          : `(${stateRef.current.progress.x} * -100%) + ${offsetX}px - ${scrollOffsetX}`,\n      y:\n        stateRef.current.maxScroll.y === 0\n          ? \"0px\"\n          : `(${stateRef.current.progress.y} * -100%) + ${offsetY}px - ${scrollOffsetY}`,\n    };\n    plane.style.transform = `translate3d(calc(${translate.x}), calc(${translate.y}), 0px)`;\n\n    stateRef.current.scroll.x =\n      stateRef.current.progress.x * stateRef.current.maxScroll.x;\n    stateRef.current.scroll.y =\n      stateRef.current.progress.y * stateRef.current.maxScroll.y;\n\n    // Call user scroll listener(s)\n    if (stateRef.current.isScrolling) {\n      if (onScrollUpdateRef.current) {\n        onScrollUpdateRef.current(stateRef.current);\n      }\n      if (onScrollHandleRef.current !== null) {\n        onScrollHandleRef.current(stateRef.current);\n      }\n    }\n\n    if (!initialisedRef.current) {\n      initialisedRef.current = true;\n      if (onScrollUpdateRef.current) {\n        onScrollUpdateRef.current(stateRef.current);\n      }\n    }\n\n    stateRef.current.isScrolling = false;\n  }, [controlled, native]);\n\n  const updateProgress = React.useCallback(\n    (dirX: number, dirY: number, distX: number, distY: number) => {\n      const state = stateRef.current;\n      if (state.locked) return;\n      const maxX = state.maxScroll.x;\n      const maxY = state.maxScroll.y;\n      const velocityX = dirX === 0 ? 0 : (1 / maxX) * distX * dirX;\n      const velocityY = dirY === 0 ? 0 : (1 / maxY) * distY * dirY;\n      state.progress.x = clamp(state.progress.x + velocityX, 0, 1);\n      state.progress.y = clamp(state.progress.y + velocityY, 0, 1);\n      update();\n    },\n    []\n  );\n\n  const onScrollUpdateRef = React.useRef(onScrollUpdate);\n  React.useEffect(() => {\n    onScrollUpdateRef.current = onScrollUpdate;\n  }, [onScrollUpdate]);\n\n  const onScrollHandleRef = React.useRef<OnScroll | null>(null);\n\n  const handleScroll = React.useCallback((onScroll: OnScroll) => {\n    onScrollHandleRef.current = onScroll;\n  }, []);\n\n  React.useEffect(() => {\n    if (ref === null) return;\n    (ref as React.MutableRefObject<ScrollApi>).current = {\n      update,\n      onScroll: handleScroll,\n      state: stateRef.current,\n    };\n  }, [ref, update, handleScroll]);\n\n  React.useEffect(() => {\n    const wrapper = wrapperRef.current;\n    if (!native) return;\n    wrapper.scrollLeft =\n      (wrapper.scrollWidth - wrapper.offsetWidth) * stateRef.current.progress.x;\n    wrapper.scrollTop =\n      (wrapper.scrollHeight - wrapper.offsetHeight) *\n      stateRef.current.progress.y;\n    update();\n  }, [native, update]);\n\n  React.useEffect(() => {\n    if (controlled) return;\n\n    let nextFrame: number;\n    (function tick() {\n      nextFrame = requestAnimationFrame(tick);\n      update();\n    })();\n\n    return () => cancelAnimationFrame(nextFrame);\n  }, [native, controlled, update]);\n\n  useWheelEvents(stateRef, wrapperRef, planeRef, native, updateProgress);\n  useTouchEvents(stateRef, wrapperRef, planeRef, touchRef, updateProgress);\n  useKeyEvents(stateRef, update);\n  useFocusEvents(stateRef, wrapperRef, planeRef, update);\n  useMouseEvents(\n    stateRef,\n    wrapperRef,\n    scrollBarHandleXRef,\n    scrollBarHandleYRef,\n    update\n  );\n\n  return (\n    <ScrollWrapper\n      {...props}\n      ref={wrapperRef}\n      style={{ overflow: native ? \"auto\" : \"hidden\" }}\n      className={classNamePrefix}\n    >\n      <ScrollPlane\n        className={`${classNamePrefix}-plane`}\n        ref={planeRef}\n        style={{ ...style, transform: native ? \"none\" : undefined }}\n      >\n        {children}\n      </ScrollPlane>\n      <ScrollBars\n        className={`${classNamePrefix}-scroll-bars`}\n        ref={scrollBarsRef}\n        size={scrollBarSize}\n        style={{ display: native ? \"none\" : undefined }}\n      >\n        <ScrollBar\n          className={`${classNamePrefix}-scroll-bar ${classNamePrefix}-scroll-bar-y`}\n          axis=\"y\"\n          size={scrollBarSize}\n          ref={scrollBarYRef}\n        >\n          <ScrollBarHandle\n            className={`${classNamePrefix}-scroll-bar-handle ${classNamePrefix}-scroll-bar-handle-y`}\n            ref={scrollBarHandleYRef}\n          />\n        </ScrollBar>\n        <ScrollBar\n          className={`${classNamePrefix}-scroll-bar ${classNamePrefix}-scroll-bar-x`}\n          axis=\"x\"\n          size={scrollBarSize}\n          ref={scrollBarXRef}\n        >\n          <ScrollBarHandle\n            className={`${classNamePrefix}-scroll-bar-handle ${classNamePrefix}-scroll-bar-handle-x`}\n            ref={scrollBarHandleXRef}\n          />\n        </ScrollBar>\n      </ScrollBars>\n    </ScrollWrapper>\n  );\n}\n\nexport default React.forwardRef(ScrollRig);\n","import React from \"react\";\nimport { State } from \"../types\";\n\nexport default function useWheelEvents(\n  stateRef: React.MutableRefObject<State>,\n  wrapperRef: React.MutableRefObject<HTMLDivElement>,\n  planeRef: React.MutableRefObject<HTMLDivElement>,\n  native: boolean,\n  updateProgress: Function\n) {\n  React.useEffect(() => {\n    function onWheel(event: WheelEvent) {\n      if (native) return;\n      if (planeRef.current === null) return;\n      const element = event.target as HTMLElement;\n      const dirX = event.deltaX === 0 ? 0 : Math.sign(event.deltaX);\n      const dirY = event.deltaY === 0 ? 0 : Math.sign(event.deltaY);\n      const distX = Math.abs(event.deltaX);\n      const distY = Math.abs(event.deltaY);\n      if (\n        element === planeRef.current ||\n        element === wrapperRef.current ||\n        wrapperRef.current.contains(element)\n      ) {\n        stateRef.current.isScrolling = true;\n        updateProgress(dirX, dirY, distX, distY);\n      }\n    }\n\n    window.addEventListener(\"wheel\", onWheel);\n    return () => {\n      window.removeEventListener(\"wheel\", onWheel);\n    };\n  }, [native, updateProgress]);\n}\n","import React from \"react\";\nimport { State, Touch } from \"../types\";\n\nexport default function useTouchEvents(\n  stateRef: React.MutableRefObject<State>,\n  wrapperRef: React.MutableRefObject<HTMLDivElement>,\n  planeRef: React.MutableRefObject<HTMLDivElement>,\n  touchRef: React.MutableRefObject<Touch>,\n  updateProgress: Function\n) {\n  React.useEffect(() => {\n    function onTouchStart(event: TouchEvent) {\n      if (wrapperRef.current === null || planeRef.current === null) return;\n      const element = event.target as HTMLElement;\n      if (\n        element === planeRef.current ||\n        element === wrapperRef.current ||\n        wrapperRef.current.contains(element)\n      ) {\n        const { pageX, pageY } = event.touches[0] ?? {};\n        touchRef.current.down = true;\n        touchRef.current.lastX = pageX;\n        touchRef.current.lastY = pageY;\n      }\n    }\n\n    function onTouchMove(event: TouchEvent) {\n      if (!touchRef.current.down) return;\n      const touch = touchRef.current;\n      const { pageX, pageY } = event.touches[0] ?? {};\n      touch.currentX = pageX;\n      touch.currentY = pageY;\n      const deltaX = touch.lastX - touch.currentX;\n      const deltaY = touch.lastY - touch.currentY;\n      const dirX = deltaX === 0 ? 0 : Math.sign(deltaX);\n      const dirY = deltaY === 0 ? 0 : Math.sign(deltaY);\n      const distX = Math.abs(deltaX);\n      const distY = Math.abs(deltaY);\n      stateRef.current.isScrolling = true;\n      updateProgress(dirX, dirY, distX, distY);\n      touch.lastX = pageX;\n      touch.lastY = pageY;\n    }\n\n    function onTouchEnd() {\n      touchRef.current.down = false;\n    }\n\n    window.addEventListener(\"touchstart\", onTouchStart);\n    window.addEventListener(\"touchmove\", onTouchMove);\n    window.addEventListener(\"touchend\", onTouchEnd);\n    return () => {\n      window.removeEventListener(\"touchstart\", onTouchStart);\n      window.removeEventListener(\"touchmove\", onTouchMove);\n      window.removeEventListener(\"touchend\", onTouchEnd);\n    };\n  }, [updateProgress]);\n}\n","import React from \"react\";\nimport { State } from \"../types\";\n\nexport default function useKeyEvents(\n  stateRef: React.MutableRefObject<State>,\n  update: Function\n) {\n  React.useEffect(() => {\n    function onKeyDown(event: KeyboardEvent) {\n      if (!event.metaKey) return;\n      switch (event.key) {\n        case \"ArrowRight\":\n          stateRef.current.progress.x = 1;\n          break;\n        case \"ArrowLeft\":\n          stateRef.current.progress.x = 0;\n          break;\n        case \"ArrowDown\":\n          stateRef.current.progress.y = 1;\n          break;\n        case \"ArrowUp\":\n          stateRef.current.progress.y = 0;\n          break;\n      }\n      update();\n    }\n\n    window.addEventListener(\"keydown\", onKeyDown);\n    return () => {\n      window.removeEventListener(\"keydown\", onKeyDown);\n    };\n  }, [update]);\n}\n","import React from \"react\";\nimport { clamp } from \"../utils\";\nimport { State } from \"../types\";\n\nexport default function useFocusEvents(\n  stateRef: React.MutableRefObject<State>,\n  wrapperRef: React.MutableRefObject<HTMLDivElement>,\n  planeRef: React.MutableRefObject<HTMLDivElement>,\n  update: Function\n) {\n  React.useEffect(() => {\n    function onFocus(event: FocusEvent) {\n      const wrapper = wrapperRef.current;\n      const plane = planeRef.current;\n      if (wrapper === null) return;\n      if (plane === null) return;\n      const element = event.target as HTMLElement;\n      const offsetLeft = Math.max(\n        0,\n        (element.offsetLeft ?? 0) - wrapper.offsetWidth\n      );\n      const offsetTop = Math.max(\n        0,\n        (element.offsetTop ?? 0) - wrapper.offsetHeight\n      );\n      const maxX = plane.offsetWidth - wrapper.offsetWidth;\n      const maxY = plane.offsetHeight - wrapper.offsetHeight;\n\n      if (offsetLeft) {\n        stateRef.current.progress.x = clamp(\n          (1 / maxX) * (offsetLeft + element.offsetWidth),\n          0,\n          1\n        );\n        if (stateRef.current.progress.x >= 0.99) {\n          stateRef.current.progress.x = 1;\n        }\n      }\n\n      if (offsetTop) {\n        stateRef.current.progress.y = clamp(\n          (1 / maxY) * (offsetTop + element.offsetHeight),\n          0,\n          1\n        );\n        if (stateRef.current.progress.y >= 0.99) {\n          stateRef.current.progress.y = 1;\n        }\n      }\n\n      update();\n    }\n\n    window.addEventListener(\"focus\", onFocus, { capture: true });\n    return () => {\n      window.removeEventListener(\"focus\", onFocus, { capture: true });\n    };\n  }, [update]);\n}\n","import React from \"react\";\nimport { clamp } from \"../utils\";\nimport { State, Touch } from \"../types\";\n\nexport default function useMouseEvents(\n  stateRef: React.MutableRefObject<State>,\n  wrapperRef: React.MutableRefObject<HTMLDivElement>,\n  scrollBarHandleXRef: React.MutableRefObject<HTMLDivElement>,\n  scrollBarHandleYRef: React.MutableRefObject<HTMLDivElement>,\n  update: Function\n) {\n  React.useEffect(() => {\n    let dragging = false;\n    let startX = 0;\n    let startY = 0;\n    let offsetX = 0;\n    let offsetY = 0;\n\n    function onMouseDown(event: MouseEvent) {\n      dragging = true;\n      startX = event.pageX - wrapperRef.current.offsetLeft;\n      startY = event.pageY - wrapperRef.current.offsetTop;\n      offsetX = Math.abs(startX - scrollBarHandleXRef.current.offsetLeft);\n      offsetY = Math.abs(startY - scrollBarHandleYRef.current.offsetTop);\n    }\n\n    function onMouseMove(event: MouseEvent) {\n      if (!dragging) return;\n\n      const x = event.pageX - wrapperRef.current.offsetLeft - offsetX;\n      const y = event.pageY - wrapperRef.current.offsetTop - offsetY;\n\n      const maxX =\n        wrapperRef.current.offsetHeight -\n        scrollBarHandleXRef.current.offsetWidth;\n      const maxY =\n        wrapperRef.current.offsetHeight -\n        scrollBarHandleYRef.current.offsetHeight;\n\n      const progressX = (1 / maxX) * x;\n      const progressY = (1 / maxY) * y;\n\n      stateRef.current.progress.x = clamp(progressX, 0, 1);\n      stateRef.current.progress.y = clamp(progressY, 0, 1);\n      stateRef.current.isScrolling = true;\n      update();\n    }\n\n    function onMouseUp() {\n      dragging = false;\n    }\n\n    scrollBarHandleXRef.current.addEventListener(\"mousedown\", onMouseDown);\n    scrollBarHandleYRef.current.addEventListener(\"mousedown\", onMouseDown);\n    window.addEventListener(\"mousemove\", onMouseMove);\n    window.addEventListener(\"mouseup\", onMouseUp);\n  }, [update]);\n}\n","import ScrollRig from \"./scroll-rig\";\n\nexport * from \"./types\";\n\nexport default ScrollRig;\n"],"names":["Wrapper","styled","Box","NativeComparison","onScrollUpdate","state","console","log","progress","y","Array","from","length","map","_","index","key","native","className","ScrollWrapper","ScrollPlane","ScrollBarHandle","ScrollBar","axis","size","css","ScrollBars","clamp","value","min","max","Math","DEFAULT_STYLE","ScrollRig","children","scrollBarSize","style","controlled","classNamePrefix","props","ref","touchRef","React","down","lastX","lastY","currentX","currentY","stateRef","maxScroll","x","wrapperSize","width","height","scroll","isScrolling","locked","wrapperRef","planeRef","scrollBarsRef","scrollBarXRef","scrollBarYRef","scrollBarHandleXRef","scrollBarHandleYRef","initialisedRef","update","wrapper","current","plane","scrollBarX","scrollBarY","scrollBarHandleX","scrollBarHandleY","scrollTop","scrollLeft","offsetWidth","offsetHeight","scrollWidth","scrollHeight","display","left","transform","top","paddingRight","paddingBottom","maxHeight","maxWidth","offsetX","offsetY","scrollOffsetX","scrollOffsetY","translate","onScrollUpdateRef","onScrollHandleRef","updateProgress","dirX","dirY","distX","distY","maxX","maxY","velocityX","velocityY","handleScroll","onScroll","nextFrame","tick","requestAnimationFrame","cancelAnimationFrame","onWheel","event","element","target","deltaX","sign","deltaY","abs","contains","window","addEventListener","removeEventListener","useWheelEvents","onTouchStart","pageX","pageY","touches","onTouchMove","touch","onTouchEnd","useTouchEvents","onKeyDown","metaKey","useKeyEvents","onFocus","offsetLeft","offsetTop","capture","useFocusEvents","dragging","startX","startY","onMouseDown","progressX","progressY","useMouseEvents","overflow","undefined"],"sourceRoot":""}