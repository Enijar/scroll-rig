{"version":3,"file":"992.3fe43d35.chunk.js","mappings":"+KAEO,MAAMA,EAAUC,EAAAA,GAAAA,IAAAA,WAAH,6BAAGA,CAAH,4FAcPC,EAAMD,EAAAA,GAAAA,IAAAA,WAAH,6BAAGA,CAAH,qN,aCZD,SAASE,IACtB,OACE,gBAACH,EAAD,KACE,gBAAC,IAAD,CAAWI,eAAiBC,GAAUC,QAAQC,IAAIF,EAAMG,SAASC,IAC/D,8CACmB,2BACjB,yDAEDC,MAAMC,KAAK,CAAEC,OAAQ,KAAMC,KAAI,CAACC,EAAGC,IAC3B,gBAACb,EAAD,CAAKc,IAAKD,GAAQA,MAG7B,gBAAC,IAAD,CAAWE,QAAM,EAACC,UAAU,UAC1B,8CACCR,MAAMC,KAAK,CAAEC,OAAQ,KAAMC,KAAI,CAACC,EAAGC,IAC3B,gBAACb,EAAD,CAAKc,IAAKD,GAAQA,S,0ECjB5B,MAAMI,EAAgBlB,EAAAA,GAAAA,IAAAA,WAAH,4BAAGA,CAAH,+CAMbmB,EAAcnB,EAAAA,GAAAA,IAAAA,WAAH,4BAAGA,CAAH,+CASXoB,EAAkBpB,EAAAA,GAAAA,IAAAA,WAAH,4BAAGA,CAAH,wGAafqB,EAAYrB,EAAAA,GAAAA,IAAAA,WAAH,4BAAGA,CAAH,0FAKhBoB,GAKF,EAAGE,KAAAA,EAAMC,KAAAA,KACI,MAATD,GACKE,EAAAA,EAAAA,IAAP,oLAEYD,EAEWA,EACCA,EAEpBH,EAC2BG,IAO1BC,EAAAA,EAAAA,IAAP,iLAEWD,EAEWA,EACGA,EAErBH,EACsBG,KASjBE,EAAazB,EAAAA,GAAAA,IAAAA,WAAH,4BAAGA,CAAH,iGC1EhB,SAAS0B,EAAMC,EAAeC,EAAaC,GAChD,OAAOC,KAAKF,IAAIE,KAAKD,IAAIF,EAAOC,GAAMC,G,gNCexC,MAAME,EAAgB,GAEtB,SAASC,GACP,SACEC,EADF,OAEEjB,GAAS,EAFX,cAGEkB,EAAgB,OAHlB,MAIEC,EAAQJ,EAJV,WAKEK,GAAa,EALf,eAMEjC,EANF,gBAOEkC,EAAkB,gBACfC,GAELC,GAEA,MAAMC,EAAWC,EAAAA,OAAoB,CACnCC,MAAM,EACNC,MAAO,EACPC,MAAO,EACPC,SAAU,EACVC,SAAU,IAGNC,EAAWN,EAAAA,OAAoB,CACnCO,UAAW,CACTC,EAAG,EACHzC,EAAG,GAEL0C,YAAa,CACXC,MAAO,EACPC,OAAQ,GAEV7C,SAAU,CACR0C,EAAG,EACHzC,EAAG,GAEL6C,OAAQ,CACNJ,EAAG,EACHzC,EAAG,GAEL8C,aAAa,IAGTC,EAAad,EAAAA,OAA6B,MAC1Ce,EAAWf,EAAAA,OAA6B,MACxCgB,EAAgBhB,EAAAA,OAA6B,MAC7CiB,EAAgBjB,EAAAA,OAA6B,MAC7CkB,EAAgBlB,EAAAA,OAA6B,MAC7CmB,EAAsBnB,EAAAA,OAA6B,MACnDoB,EAAsBpB,EAAAA,OAA6B,MAEnDqB,EAASrB,EAAAA,aAAkB,KAC/B,MAAMsB,EAAUR,EAAWS,QACrBC,EAAQT,EAASQ,QACjBE,EAAaR,EAAcM,QAC3BG,EAAaR,EAAcK,QAC3BI,EAAmBR,EAAoBI,QACvCK,EAAmBR,EAAoBG,QAE7C,GAAIhD,EAAQ,OACZ,GAAc,OAAViD,EAAgB,OACpB,GAAmB,OAAfC,EAAqB,OACzB,GAAmB,OAAfC,EAAqB,OAEzBJ,EAAQO,UAAY,EACpBP,EAAQQ,WAAa,EACrBxB,EAASiB,QAAQd,YAAYC,MAAQY,EAAQS,YAC7CzB,EAASiB,QAAQd,YAAYE,OAASW,EAAQU,aAC9C1B,EAASiB,QAAQhB,UAAUC,EAAInB,KAAKD,IAClC,EACAoC,EAAMS,YAAcX,EAAQS,aAE9BzB,EAASiB,QAAQhB,UAAUxC,EAAIsB,KAAKD,IAClC,EACAoC,EAAMU,aAAeZ,EAAQU,cAE/BP,EAAW/B,MAAMyC,QACkB,IAAjC7B,EAASiB,QAAQhB,UAAUC,EAAU,OAAS,OAChDkB,EAAWhC,MAAMyC,QACkB,IAAjC7B,EAASiB,QAAQhB,UAAUxC,EAAU,OAAS,OAE5CuC,EAASiB,QAAQhB,UAAUC,EAAI,IACjCmB,EAAiBjC,MAAM0C,KAAwC,IAA9B9B,EAASiB,QAAQzD,SAAS0C,EAA5B,IAC/BmB,EAAiBjC,MAAM2C,UAAa,eACH,IAA/B/B,EAASiB,QAAQzD,SAAS0C,MAE5BmB,EAAiBjC,MAAMgB,MACpBY,EAAQS,aACNzB,EAASiB,QAAQhB,UAAUC,EAAIc,EAAQS,aAC1C,IAH8B,KAO9BzB,EAASiB,QAAQhB,UAAUxC,EAAI,IACjC6D,EAAiBlC,MAAM4C,IAAuC,IAA9BhC,EAASiB,QAAQzD,SAASC,EAA5B,IAC9B6D,EAAiBlC,MAAM2C,UAAa,eACH,IAA/B/B,EAASiB,QAAQzD,SAASC,MAE5B6D,EAAiBlC,MAAMiB,OACpBW,EAAQU,cACN1B,EAASiB,QAAQhB,UAAUxC,EAAIuD,EAAQU,cAC1C,IAH+B,KAOnCP,EAAW/B,MAAM2C,UACkB,IAAjC/B,EAASiB,QAAQhB,UAAUC,EACvB,OACC,eAAcf,KAErBgC,EAAW/B,MAAM6C,aACkB,IAAjCjC,EAASiB,QAAQhB,UAAUxC,EAAU,MAAQ0B,EAC/CiC,EAAWhC,MAAM8C,cACkB,IAAjClC,EAASiB,QAAQhB,UAAUC,EACtB,QAAOf,SACRA,EAEN+B,EAAM9B,MAAM+C,UACuB,IAAjCnC,EAASiB,QAAQhB,UAAUC,EACvB,QACC,eAAcf,KACrB+B,EAAM9B,MAAMgD,SACuB,IAAjCpC,EAASiB,QAAQhB,UAAUxC,EACvB,QACC,eAAc0B,KAErB,MAAMkD,EACJrC,EAASiB,QAAQd,YAAYC,MAAQJ,EAASiB,QAAQzD,SAAS0C,EAC3DoC,EACJtC,EAASiB,QAAQd,YAAYE,OAASL,EAASiB,QAAQzD,SAASC,EAC5D8E,EACJvC,EAASiB,QAAQhB,UAAUxC,EAAI,EAAI0B,EAAgB,MAC/CqD,EACJxC,EAASiB,QAAQhB,UAAUC,EAAI,EAAIf,EAAgB,MAC/CsD,EAE+B,IAAjCzC,EAASiB,QAAQhB,UAAUC,EACvB,MACC,IAAGF,EAASiB,QAAQzD,SAAS0C,gBAAgBmC,SAAeE,IAJ/DE,EAM+B,IAAjCzC,EAASiB,QAAQhB,UAAUxC,EACvB,MACC,IAAGuC,EAASiB,QAAQzD,SAASC,gBAAgB6E,SAAeE,IAErEtB,EAAM9B,MAAM2C,UAAa,oBAAmBU,YAAsBA,WAElEzC,EAASiB,QAAQX,OAAOJ,EACtBF,EAASiB,QAAQzD,SAAS0C,EAAIF,EAASiB,QAAQhB,UAAUC,EAC3DF,EAASiB,QAAQX,OAAO7C,EACtBuC,EAASiB,QAAQzD,SAASC,EAAIuC,EAASiB,QAAQhB,UAAUxC,EAGvDuC,EAASiB,QAAQV,cACfmC,EAAkBzB,SACpByB,EAAkBzB,QAAQjB,EAASiB,SAEH,OAA9B0B,EAAkB1B,SACpB0B,EAAkB1B,QAAQjB,EAASiB,UAIvCjB,EAASiB,QAAQV,aAAc,IAC9B,CAAClB,EAAYpB,IAEV2E,EAAiBlD,EAAAA,aACrB,CAACmD,EAAcC,EAAcC,EAAeC,KAC1C,MAAM3F,EAAQ2C,EAASiB,QACjBgC,EAAO5F,EAAM4C,UAAUC,EACvBgD,EAAO7F,EAAM4C,UAAUxC,EACvB0F,EAAqB,IAATN,EAAa,EAAK,EAAII,EAAQF,EAAQF,EAClDO,EAAqB,IAATN,EAAa,EAAK,EAAII,EAAQF,EAAQF,EACxDzF,EAAMG,SAAS0C,EAAIvB,EAAMtB,EAAMG,SAAS0C,EAAIiD,EAAW,EAAG,GAC1D9F,EAAMG,SAASC,EAAIkB,EAAMtB,EAAMG,SAASC,EAAI2F,EAAW,EAAG,GAC1DrC,MAEF,IAGI2B,EAAoBhD,EAAAA,OAAatC,GACvCsC,EAAAA,WAAgB,KACdgD,EAAkBzB,QAAU7D,IAC3B,CAACA,IAEJ,MAAMuF,EAAoBjD,EAAAA,OAA8B,MAElD2D,EAAe3D,EAAAA,aAAmB4D,IACtCX,EAAkB1B,QAAUqC,IAC3B,IA8CH,OA5CA5D,EAAAA,WAAgB,KACF,OAARF,IACHA,EAA0CyB,QAAU,CACnDF,OAAAA,EACAuC,SAAUD,EACVhG,MAAO2C,EAASiB,YAEjB,CAACzB,EAAKuB,EAAQsC,IAEjB3D,EAAAA,WAAgB,KACd,MAAMsB,EAAUR,EAAWS,QACtBhD,IACL+C,EAAQQ,YACLR,EAAQW,YAAcX,EAAQS,aAAezB,EAASiB,QAAQzD,SAAS0C,EAC1Ec,EAAQO,WACLP,EAAQY,aAAeZ,EAAQU,cAChC1B,EAASiB,QAAQzD,SAASC,EAC5BsD,OACC,CAAC9C,EAAQ8C,IAEZrB,EAAAA,WAAgB,KACd,GAAIL,EAAY,OAEhB,IAAIkE,EAMJ,OALA,SAAUC,IACRD,EAAYE,sBAAsBD,GAClCzC,IAFF,GAKO,IAAM2C,qBAAqBH,KACjC,CAACtF,EAAQoB,EAAY0B,ICxOX,SACbf,EACAQ,EACAC,EACAxC,EACA2E,GAEAlD,EAAAA,WAAgB,KACd,SAASiE,EAAQC,GACf,GAAI3F,EAAQ,OACZ,GAAyB,OAArBwC,EAASQ,QAAkB,OAC/B,MAAM4C,EAAUD,EAAME,OAChBjB,EAAwB,IAAjBe,EAAMG,OAAe,EAAIhF,KAAKiF,KAAKJ,EAAMG,QAChDjB,EAAwB,IAAjBc,EAAMK,OAAe,EAAIlF,KAAKiF,KAAKJ,EAAMK,QAChDlB,EAAQhE,KAAKmF,IAAIN,EAAMG,QACvBf,EAAQjE,KAAKmF,IAAIN,EAAMK,SAE3BJ,IAAYpD,EAASQ,SACrB4C,IAAYrD,EAAWS,SACvBT,EAAWS,QAAQkD,SAASN,MAE5B7D,EAASiB,QAAQV,aAAc,EAC/BqC,EAAeC,EAAMC,EAAMC,EAAOC,IAKtC,OADAoB,OAAOC,iBAAiB,QAASV,GAC1B,KACLS,OAAOE,oBAAoB,QAASX,MAErC,CAAC1F,EAAQ2E,ID4MZ2B,CAAevE,EAAUQ,EAAYC,EAAUxC,EAAQ2E,GE1O1C,SACb5C,EACAQ,EACAC,EACAhB,EACAmD,GAEAlD,EAAAA,WAAgB,KACd,SAAS8E,EAAaZ,GACpB,GAA2B,OAAvBpD,EAAWS,SAAyC,OAArBR,EAASQ,QAAkB,OAC9D,MAAM4C,EAAUD,EAAME,OACtB,GACED,IAAYpD,EAASQ,SACrB4C,IAAYrD,EAAWS,SACvBT,EAAWS,QAAQkD,SAASN,GAC5B,CACA,MAAM,MAAEY,EAAF,MAASC,GAAUd,EAAMe,QAAQ,IAAM,GAC7ClF,EAASwB,QAAQtB,MAAO,EACxBF,EAASwB,QAAQrB,MAAQ6E,EACzBhF,EAASwB,QAAQpB,MAAQ6E,GAI7B,SAASE,EAAYhB,GACnB,IAAKnE,EAASwB,QAAQtB,KAAM,OAC5B,MAAMkF,EAAQpF,EAASwB,SACjB,MAAEwD,EAAF,MAASC,GAAUd,EAAMe,QAAQ,IAAM,GAC7CE,EAAM/E,SAAW2E,EACjBI,EAAM9E,SAAW2E,EACjB,MAAMX,EAASc,EAAMjF,MAAQiF,EAAM/E,SAC7BmE,EAASY,EAAMhF,MAAQgF,EAAM9E,SAC7B8C,EAAkB,IAAXkB,EAAe,EAAIhF,KAAKiF,KAAKD,GACpCjB,EAAkB,IAAXmB,EAAe,EAAIlF,KAAKiF,KAAKC,GACpClB,EAAQhE,KAAKmF,IAAIH,GACjBf,EAAQjE,KAAKmF,IAAID,GACvBjE,EAASiB,QAAQV,aAAc,EAC/BqC,EAAeC,EAAMC,EAAMC,EAAOC,GAClC6B,EAAMjF,MAAQ6E,EACdI,EAAMhF,MAAQ6E,EAGhB,SAASI,IACPrF,EAASwB,QAAQtB,MAAO,EAM1B,OAHAyE,OAAOC,iBAAiB,aAAcG,GACtCJ,OAAOC,iBAAiB,YAAaO,GACrCR,OAAOC,iBAAiB,WAAYS,GAC7B,KACLV,OAAOE,oBAAoB,aAAcE,GACzCJ,OAAOE,oBAAoB,YAAaM,GACxCR,OAAOE,oBAAoB,WAAYQ,MAExC,CAAClC,IFsLJmC,CAAe/E,EAAUQ,EAAYC,EAAUhB,EAAUmD,GG3O5C,SACb5C,EACAe,GAEArB,EAAAA,WAAgB,KACd,SAASsF,EAAUpB,GACjB,GAAKA,EAAMqB,QAAX,CACA,OAAQrB,EAAM5F,KACZ,IAAK,aACHgC,EAASiB,QAAQzD,SAAS0C,EAAI,EAC9B,MACF,IAAK,YACHF,EAASiB,QAAQzD,SAAS0C,EAAI,EAC9B,MACF,IAAK,YACHF,EAASiB,QAAQzD,SAASC,EAAI,EAC9B,MACF,IAAK,UACHuC,EAASiB,QAAQzD,SAASC,EAAI,EAGlCsD,KAIF,OADAqD,OAAOC,iBAAiB,UAAWW,GAC5B,KACLZ,OAAOE,oBAAoB,UAAWU,MAEvC,CAACjE,IHgNJmE,CAAalF,EAAUe,GI3OV,SACbf,EACAQ,EACAC,EACAM,GAEArB,EAAAA,WAAgB,KACd,SAASyF,EAAQvB,GACf,MAAM5C,EAAUR,EAAWS,QACrBC,EAAQT,EAASQ,QACvB,GAAgB,OAAZD,EAAkB,OACtB,GAAc,OAAVE,EAAgB,OACpB,MAAM2C,EAAUD,EAAME,OAChBsB,EAAarG,KAAKD,IACtB,GACC+E,EAAQuB,YAAc,GAAKpE,EAAQS,aAEhC4D,EAAYtG,KAAKD,IACrB,GACC+E,EAAQwB,WAAa,GAAKrE,EAAQU,cAE/BuB,EAAO/B,EAAMO,YAAcT,EAAQS,YACnCyB,EAAOhC,EAAMQ,aAAeV,EAAQU,aAEtC0D,IACFpF,EAASiB,QAAQzD,SAAS0C,EAAIvB,EAC3B,EAAIsE,GAASmC,EAAavB,EAAQpC,aACnC,EACA,GAEEzB,EAASiB,QAAQzD,SAAS0C,GAAK,MACjCF,EAASiB,QAAQzD,SAAS0C,EAAI,IAI9BmF,IACFrF,EAASiB,QAAQzD,SAASC,EAAIkB,EAC3B,EAAIuE,GAASmC,EAAYxB,EAAQnC,cAClC,EACA,GAEE1B,EAASiB,QAAQzD,SAASC,GAAK,MACjCuC,EAASiB,QAAQzD,SAASC,EAAI,IAIlCsD,IAIF,OADAqD,OAAOC,iBAAiB,QAASc,EAAS,CAAEG,SAAS,IAC9C,KACLlB,OAAOE,oBAAoB,QAASa,EAAS,CAAEG,SAAS,OAEzD,CAACvE,IJuLJwE,CAAevF,EAAUQ,EAAYC,EAAUM,GK5OlC,SACbf,EACAQ,EACAK,EACAC,EACAC,GAEArB,EAAAA,WAAgB,KACd,IAAI8F,GAAW,EACXC,EAAS,EACTC,EAAS,EACTrD,EAAU,EACVC,EAAU,EAEd,SAASqD,EAAY/B,GACnB4B,GAAW,EACXC,EAAS7B,EAAMa,MAAQjE,EAAWS,QAAQmE,WAC1CM,EAAS9B,EAAMc,MAAQlE,EAAWS,QAAQoE,UAC1ChD,EAAUtD,KAAKmF,IAAIuB,EAAS5E,EAAoBI,QAAQmE,YACxD9C,EAAUvD,KAAKmF,IAAIwB,EAAS5E,EAAoBG,QAAQoE,WA6B1DxE,EAAoBI,QAAQoD,iBAAiB,YAAasB,GAC1D7E,EAAoBG,QAAQoD,iBAAiB,YAAasB,GAC1DvB,OAAOC,iBAAiB,aA5BxB,SAAqBT,GACnB,IAAK4B,EAAU,OAEf,MAAMtF,EAAI0D,EAAMa,MAAQjE,EAAWS,QAAQmE,WAAa/C,EAClD5E,EAAImG,EAAMc,MAAQlE,EAAWS,QAAQoE,UAAY/C,EASjDsD,EAAa,GANjBpF,EAAWS,QAAQS,aACnBb,EAAoBI,QAAQQ,aAKCvB,EACzB2F,EAAa,GAJjBrF,EAAWS,QAAQS,aACnBZ,EAAoBG,QAAQS,cAGCjE,EAE/BuC,EAASiB,QAAQzD,SAAS0C,EAAIvB,EAAMiH,EAAW,EAAG,GAClD5F,EAASiB,QAAQzD,SAASC,EAAIkB,EAAMkH,EAAW,EAAG,GAClD7F,EAASiB,QAAQV,aAAc,EAC/BQ,OAUFqD,OAAOC,iBAAiB,WAPxB,WACEmB,GAAW,OAOZ,CAACzE,ILyLJ+E,CACE9F,EACAQ,EACAK,EACAC,EACAC,GAIA,gBAAC5C,EAAD,KACMoB,EADN,CAEEC,IAAKgB,EACLpB,MAAO,CAAE2G,SAAU9H,EAAS,OAAS,UACrCC,UAAWoB,IAEX,gBAAClB,EAAD,CACEF,UAAY,GAAEoB,UACdE,IAAKiB,EACLrB,MAAO,IAAKA,EAAO2C,UAAW9D,EAAS,YAAS+H,IAE/C9G,GAEH,gBAACR,EAAD,CACER,UAAY,GAAEoB,gBACdE,IAAKkB,EACLlC,KAAMW,EACNC,MAAO,CAAEyC,QAAS5D,EAAS,YAAS+H,IAEpC,gBAAC1H,EAAD,CACEJ,UAAY,GAAEoB,gBAA8BA,iBAC5Cf,KAAK,IACLC,KAAMW,EACNK,IAAKoB,GAEL,gBAACvC,EAAD,CACEH,UAAY,GAAEoB,uBAAqCA,wBACnDE,IAAKsB,KAGT,gBAACxC,EAAD,CACEJ,UAAY,GAAEoB,gBAA8BA,iBAC5Cf,KAAK,IACLC,KAAMW,EACNK,IAAKmB,GAEL,gBAACtC,EAAD,CACEH,UAAY,GAAEoB,uBAAqCA,wBACnDE,IAAKqB,OAQjB,IMpSA,ENoSenB,EAAAA,WAAiBT","sources":["webpack://scroll-rig/./demo/examples/native-comparison/styles.ts","webpack://scroll-rig/./demo/examples/native-comparison/native-comparison.tsx","webpack://scroll-rig/./lib/styles.ts","webpack://scroll-rig/./lib/utils.ts","webpack://scroll-rig/./lib/scroll-rig.tsx","webpack://scroll-rig/./lib/hooks/use-wheel-events.ts","webpack://scroll-rig/./lib/hooks/use-touch-events.ts","webpack://scroll-rig/./lib/hooks/use-key-events.ts","webpack://scroll-rig/./lib/hooks/use-focus-events.ts","webpack://scroll-rig/./lib/hooks/use-mouse-events.ts","webpack://scroll-rig/./lib/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  height: 100%;\n\n  h2 {\n    text-align: center;\n    line-height: 1em;\n\n    small {\n      font-size: 0.6em;\n    }\n  }\n`;\n\nexport const Box = styled.div`\n  height: 50vh;\n  aspect-ratio: 1 / 1;\n  background-color: crimson;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #fefefe;\n  margin-bottom: 1em;\n  margin-left: auto;\n  margin-right: auto;\n\n  :last-child {\n    margin-bottom: 0;\n  }\n`;\n","import React from \"react\";\nimport { Box, Wrapper } from \"./styles\";\nimport ScrollRig from \"../../../lib\";\n\nexport default function NativeComparison() {\n  return (\n    <Wrapper>\n      <ScrollRig onScrollUpdate={(state) => console.log(state.progress.y)}>\n        <h2>\n          Custom Scroll 👇 <br />\n          <small>(Open Console for Logs)</small>\n        </h2>\n        {Array.from({ length: 10 }).map((_, index) => {\n          return <Box key={index}>{index}</Box>;\n        })}\n      </ScrollRig>\n      <ScrollRig native className=\"scroll\">\n        <h2>Native Scroll 👇</h2>\n        {Array.from({ length: 10 }).map((_, index) => {\n          return <Box key={index}>{index}</Box>;\n        })}\n      </ScrollRig>\n    </Wrapper>\n  );\n}\n","import styled, { css } from \"styled-components\";\n\nexport const ScrollWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  position: relative;\n`;\n\nexport const ScrollPlane = styled.div`\n  will-change: transform;\n  white-space: nowrap;\n`;\n\ntype ScrollBarsProps = {\n  size: string;\n};\n\nexport const ScrollBarHandle = styled.div`\n  will-change: transform;\n  background-color: #c7c7c7;\n  position: relative;\n  min-height: 2em;\n  border-radius: 2em;\n`;\n\ntype ScrollBarProps = {\n  axis: \"x\" | \"y\";\n  size: string;\n};\n\nexport const ScrollBar = styled.div<ScrollBarProps>`\n  pointer-events: all;\n  background-color: #fafafa;\n\n  :hover {\n    ${ScrollBarHandle} {\n      background-color: #878787;\n    }\n  }\n\n  ${({ axis, size }) => {\n    if (axis === \"x\") {\n      return css`\n        width: 100%;\n        height: ${size};\n        margin-top: auto;\n        padding-left: calc(${size} / 4);\n        padding-right: calc(${size} / 4);\n\n        ${ScrollBarHandle} {\n          min-height: calc(100% - (${size} / 2));\n          width: 0;\n          margin-top: auto;\n          margin-bottom: auto;\n        }\n      `;\n    }\n    return css`\n      height: 100%;\n      width: ${size};\n      margin-left: auto;\n      padding-top: calc(${size} / 4);\n      padding-bottom: calc(${size} / 4);\n\n      ${ScrollBarHandle} {\n        width: calc(100% - (${size} / 2));\n        height: 0;\n        margin-left: auto;\n        margin-right: auto;\n      }\n    `;\n  }}\n`;\n\nexport const ScrollBars = styled.div<ScrollBarsProps>`\n  position: absolute;\n  pointer-events: none;\n  user-select: none;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n`;\n","export function clamp(value: number, min: number, max: number): number {\n  return Math.min(Math.max(value, min), max);\n}\n\nexport function map(\n  value: number,\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number\n): number {\n  return ((value - x1) * (y2 - x2)) / (y1 - x1) + x2;\n}\n","import React from \"react\";\nimport {\n  ScrollBar,\n  ScrollBarHandle,\n  ScrollBars,\n  ScrollPlane,\n  ScrollWrapper,\n} from \"./styles\";\nimport { Props, State, Touch, OnScroll, ScrollApi } from \"./types\";\nimport { clamp } from \"./utils\";\nimport useKeyEvents from \"./hooks/use-key-events\";\nimport useTouchEvents from \"./hooks/use-touch-events\";\nimport useFocusEvents from \"./hooks/use-focus-events\";\nimport useMouseEvents from \"./hooks/use-mouse-events\";\nimport useWheelEvents from \"./hooks/use-wheel-events\";\n\nconst DEFAULT_STYLE = {};\n\nfunction ScrollRig(\n  {\n    children,\n    native = false,\n    scrollBarSize = \"15px\",\n    style = DEFAULT_STYLE,\n    controlled = false,\n    onScrollUpdate,\n    classNamePrefix = \"scroll-rig\",\n    ...props\n  }: Props,\n  ref: React.ForwardedRef<ScrollApi>\n) {\n  const touchRef = React.useRef<Touch>({\n    down: false,\n    lastX: 0,\n    lastY: 0,\n    currentX: 0,\n    currentY: 0,\n  });\n\n  const stateRef = React.useRef<State>({\n    maxScroll: {\n      x: 0,\n      y: 0,\n    },\n    wrapperSize: {\n      width: 0,\n      height: 0,\n    },\n    progress: {\n      x: 0,\n      y: 0,\n    },\n    scroll: {\n      x: 0,\n      y: 0,\n    },\n    isScrolling: false,\n  });\n\n  const wrapperRef = React.useRef<HTMLDivElement>(null);\n  const planeRef = React.useRef<HTMLDivElement>(null);\n  const scrollBarsRef = React.useRef<HTMLDivElement>(null);\n  const scrollBarXRef = React.useRef<HTMLDivElement>(null);\n  const scrollBarYRef = React.useRef<HTMLDivElement>(null);\n  const scrollBarHandleXRef = React.useRef<HTMLDivElement>(null);\n  const scrollBarHandleYRef = React.useRef<HTMLDivElement>(null);\n\n  const update = React.useCallback(() => {\n    const wrapper = wrapperRef.current;\n    const plane = planeRef.current;\n    const scrollBarX = scrollBarXRef.current;\n    const scrollBarY = scrollBarYRef.current;\n    const scrollBarHandleX = scrollBarHandleXRef.current;\n    const scrollBarHandleY = scrollBarHandleYRef.current;\n\n    if (native) return;\n    if (plane === null) return;\n    if (scrollBarX === null) return;\n    if (scrollBarY === null) return;\n\n    wrapper.scrollTop = 0;\n    wrapper.scrollLeft = 0;\n    stateRef.current.wrapperSize.width = wrapper.offsetWidth;\n    stateRef.current.wrapperSize.height = wrapper.offsetHeight;\n    stateRef.current.maxScroll.x = Math.max(\n      0,\n      plane.scrollWidth - wrapper.offsetWidth\n    );\n    stateRef.current.maxScroll.y = Math.max(\n      0,\n      plane.scrollHeight - wrapper.offsetHeight\n    );\n    scrollBarX.style.display =\n      stateRef.current.maxScroll.x === 0 ? \"none\" : \"flex\";\n    scrollBarY.style.display =\n      stateRef.current.maxScroll.y === 0 ? \"none\" : \"flex\";\n\n    if (stateRef.current.maxScroll.x > 0) {\n      scrollBarHandleX.style.left = `${stateRef.current.progress.x * 100}%`;\n      scrollBarHandleX.style.transform = `translateX(${\n        stateRef.current.progress.x * -100\n      }%)`;\n      scrollBarHandleX.style.width = `${\n        (wrapper.offsetWidth /\n          (stateRef.current.maxScroll.x + wrapper.offsetWidth)) *\n        100\n      }%`;\n    }\n\n    if (stateRef.current.maxScroll.y > 0) {\n      scrollBarHandleY.style.top = `${stateRef.current.progress.y * 100}%`;\n      scrollBarHandleY.style.transform = `translateY(${\n        stateRef.current.progress.y * -100\n      }%)`;\n      scrollBarHandleY.style.height = `${\n        (wrapper.offsetHeight /\n          (stateRef.current.maxScroll.y + wrapper.offsetHeight)) *\n        100\n      }%`;\n    }\n\n    scrollBarX.style.transform =\n      stateRef.current.maxScroll.x === 0\n        ? \"none\"\n        : `translateY(-${scrollBarSize})`;\n\n    scrollBarX.style.paddingRight =\n      stateRef.current.maxScroll.y === 0 ? \"0px\" : scrollBarSize;\n    scrollBarY.style.paddingBottom =\n      stateRef.current.maxScroll.x === 0\n        ? `calc(${scrollBarSize} / 4)`\n        : scrollBarSize;\n\n    plane.style.maxHeight =\n      stateRef.current.maxScroll.x === 0\n        ? \"unset\"\n        : `calc(100% - ${scrollBarSize})`;\n    plane.style.maxWidth =\n      stateRef.current.maxScroll.y === 0\n        ? \"unset\"\n        : `calc(100% - ${scrollBarSize})`;\n\n    const offsetX =\n      stateRef.current.wrapperSize.width * stateRef.current.progress.x;\n    const offsetY =\n      stateRef.current.wrapperSize.height * stateRef.current.progress.y;\n    const scrollOffsetX =\n      stateRef.current.maxScroll.y > 0 ? scrollBarSize : \"0px\";\n    const scrollOffsetY =\n      stateRef.current.maxScroll.x > 0 ? scrollBarSize : \"0px\";\n    const translate = {\n      x:\n        stateRef.current.maxScroll.x === 0\n          ? \"0px\"\n          : `(${stateRef.current.progress.x} * -100%) + ${offsetX}px - ${scrollOffsetX}`,\n      y:\n        stateRef.current.maxScroll.y === 0\n          ? \"0px\"\n          : `(${stateRef.current.progress.y} * -100%) + ${offsetY}px - ${scrollOffsetY}`,\n    };\n    plane.style.transform = `translate3d(calc(${translate.x}), calc(${translate.y}), 0px)`;\n\n    stateRef.current.scroll.x =\n      stateRef.current.progress.x * stateRef.current.maxScroll.x;\n    stateRef.current.scroll.y =\n      stateRef.current.progress.y * stateRef.current.maxScroll.y;\n\n    // Call user scroll listener(s)\n    if (stateRef.current.isScrolling) {\n      if (onScrollUpdateRef.current) {\n        onScrollUpdateRef.current(stateRef.current);\n      }\n      if (onScrollHandleRef.current !== null) {\n        onScrollHandleRef.current(stateRef.current);\n      }\n    }\n\n    stateRef.current.isScrolling = false;\n  }, [controlled, native]);\n\n  const updateProgress = React.useCallback(\n    (dirX: number, dirY: number, distX: number, distY: number) => {\n      const state = stateRef.current;\n      const maxX = state.maxScroll.x;\n      const maxY = state.maxScroll.y;\n      const velocityX = dirX === 0 ? 0 : (1 / maxX) * distX * dirX;\n      const velocityY = dirY === 0 ? 0 : (1 / maxY) * distY * dirY;\n      state.progress.x = clamp(state.progress.x + velocityX, 0, 1);\n      state.progress.y = clamp(state.progress.y + velocityY, 0, 1);\n      update();\n    },\n    []\n  );\n\n  const onScrollUpdateRef = React.useRef(onScrollUpdate);\n  React.useEffect(() => {\n    onScrollUpdateRef.current = onScrollUpdate;\n  }, [onScrollUpdate]);\n\n  const onScrollHandleRef = React.useRef<OnScroll | null>(null);\n\n  const handleScroll = React.useCallback((onScroll: OnScroll) => {\n    onScrollHandleRef.current = onScroll;\n  }, []);\n\n  React.useEffect(() => {\n    if (ref === null) return;\n    (ref as React.MutableRefObject<ScrollApi>).current = {\n      update,\n      onScroll: handleScroll,\n      state: stateRef.current,\n    };\n  }, [ref, update, handleScroll]);\n\n  React.useEffect(() => {\n    const wrapper = wrapperRef.current;\n    if (!native) return;\n    wrapper.scrollLeft =\n      (wrapper.scrollWidth - wrapper.offsetWidth) * stateRef.current.progress.x;\n    wrapper.scrollTop =\n      (wrapper.scrollHeight - wrapper.offsetHeight) *\n      stateRef.current.progress.y;\n    update();\n  }, [native, update]);\n\n  React.useEffect(() => {\n    if (controlled) return;\n\n    let nextFrame: number;\n    (function tick() {\n      nextFrame = requestAnimationFrame(tick);\n      update();\n    })();\n\n    return () => cancelAnimationFrame(nextFrame);\n  }, [native, controlled, update]);\n\n  useWheelEvents(stateRef, wrapperRef, planeRef, native, updateProgress);\n  useTouchEvents(stateRef, wrapperRef, planeRef, touchRef, updateProgress);\n  useKeyEvents(stateRef, update);\n  useFocusEvents(stateRef, wrapperRef, planeRef, update);\n  useMouseEvents(\n    stateRef,\n    wrapperRef,\n    scrollBarHandleXRef,\n    scrollBarHandleYRef,\n    update\n  );\n\n  return (\n    <ScrollWrapper\n      {...props}\n      ref={wrapperRef}\n      style={{ overflow: native ? \"auto\" : \"hidden\" }}\n      className={classNamePrefix}\n    >\n      <ScrollPlane\n        className={`${classNamePrefix}-plane`}\n        ref={planeRef}\n        style={{ ...style, transform: native ? \"none\" : undefined }}\n      >\n        {children}\n      </ScrollPlane>\n      <ScrollBars\n        className={`${classNamePrefix}-scroll-bars`}\n        ref={scrollBarsRef}\n        size={scrollBarSize}\n        style={{ display: native ? \"none\" : undefined }}\n      >\n        <ScrollBar\n          className={`${classNamePrefix}-scroll-bar ${classNamePrefix}-scroll-bar-y`}\n          axis=\"y\"\n          size={scrollBarSize}\n          ref={scrollBarYRef}\n        >\n          <ScrollBarHandle\n            className={`${classNamePrefix}-scroll-bar-handle ${classNamePrefix}-scroll-bar-handle-y`}\n            ref={scrollBarHandleYRef}\n          />\n        </ScrollBar>\n        <ScrollBar\n          className={`${classNamePrefix}-scroll-bar ${classNamePrefix}-scroll-bar-x`}\n          axis=\"x\"\n          size={scrollBarSize}\n          ref={scrollBarXRef}\n        >\n          <ScrollBarHandle\n            className={`${classNamePrefix}-scroll-bar-handle ${classNamePrefix}-scroll-bar-handle-x`}\n            ref={scrollBarHandleXRef}\n          />\n        </ScrollBar>\n      </ScrollBars>\n    </ScrollWrapper>\n  );\n}\n\nexport default React.forwardRef(ScrollRig);\n","import React from \"react\";\nimport { State } from \"../types\";\n\nexport default function useWheelEvents(\n  stateRef: React.MutableRefObject<State>,\n  wrapperRef: React.MutableRefObject<HTMLDivElement>,\n  planeRef: React.MutableRefObject<HTMLDivElement>,\n  native: boolean,\n  updateProgress: Function\n) {\n  React.useEffect(() => {\n    function onWheel(event: WheelEvent) {\n      if (native) return;\n      if (planeRef.current === null) return;\n      const element = event.target as HTMLElement;\n      const dirX = event.deltaX === 0 ? 0 : Math.sign(event.deltaX);\n      const dirY = event.deltaY === 0 ? 0 : Math.sign(event.deltaY);\n      const distX = Math.abs(event.deltaX);\n      const distY = Math.abs(event.deltaY);\n      if (\n        element === planeRef.current ||\n        element === wrapperRef.current ||\n        wrapperRef.current.contains(element)\n      ) {\n        stateRef.current.isScrolling = true;\n        updateProgress(dirX, dirY, distX, distY);\n      }\n    }\n\n    window.addEventListener(\"wheel\", onWheel);\n    return () => {\n      window.removeEventListener(\"wheel\", onWheel);\n    };\n  }, [native, updateProgress]);\n}\n","import React from \"react\";\nimport { State, Touch } from \"../types\";\n\nexport default function useTouchEvents(\n  stateRef: React.MutableRefObject<State>,\n  wrapperRef: React.MutableRefObject<HTMLDivElement>,\n  planeRef: React.MutableRefObject<HTMLDivElement>,\n  touchRef: React.MutableRefObject<Touch>,\n  updateProgress: Function\n) {\n  React.useEffect(() => {\n    function onTouchStart(event: TouchEvent) {\n      if (wrapperRef.current === null || planeRef.current === null) return;\n      const element = event.target as HTMLElement;\n      if (\n        element === planeRef.current ||\n        element === wrapperRef.current ||\n        wrapperRef.current.contains(element)\n      ) {\n        const { pageX, pageY } = event.touches[0] ?? {};\n        touchRef.current.down = true;\n        touchRef.current.lastX = pageX;\n        touchRef.current.lastY = pageY;\n      }\n    }\n\n    function onTouchMove(event: TouchEvent) {\n      if (!touchRef.current.down) return;\n      const touch = touchRef.current;\n      const { pageX, pageY } = event.touches[0] ?? {};\n      touch.currentX = pageX;\n      touch.currentY = pageY;\n      const deltaX = touch.lastX - touch.currentX;\n      const deltaY = touch.lastY - touch.currentY;\n      const dirX = deltaX === 0 ? 0 : Math.sign(deltaX);\n      const dirY = deltaY === 0 ? 0 : Math.sign(deltaY);\n      const distX = Math.abs(deltaX);\n      const distY = Math.abs(deltaY);\n      stateRef.current.isScrolling = true;\n      updateProgress(dirX, dirY, distX, distY);\n      touch.lastX = pageX;\n      touch.lastY = pageY;\n    }\n\n    function onTouchEnd() {\n      touchRef.current.down = false;\n    }\n\n    window.addEventListener(\"touchstart\", onTouchStart);\n    window.addEventListener(\"touchmove\", onTouchMove);\n    window.addEventListener(\"touchend\", onTouchEnd);\n    return () => {\n      window.removeEventListener(\"touchstart\", onTouchStart);\n      window.removeEventListener(\"touchmove\", onTouchMove);\n      window.removeEventListener(\"touchend\", onTouchEnd);\n    };\n  }, [updateProgress]);\n}\n","import React from \"react\";\nimport { State } from \"../types\";\n\nexport default function useKeyEvents(\n  stateRef: React.MutableRefObject<State>,\n  update: Function\n) {\n  React.useEffect(() => {\n    function onKeyDown(event: KeyboardEvent) {\n      if (!event.metaKey) return;\n      switch (event.key) {\n        case \"ArrowRight\":\n          stateRef.current.progress.x = 1;\n          break;\n        case \"ArrowLeft\":\n          stateRef.current.progress.x = 0;\n          break;\n        case \"ArrowDown\":\n          stateRef.current.progress.y = 1;\n          break;\n        case \"ArrowUp\":\n          stateRef.current.progress.y = 0;\n          break;\n      }\n      update();\n    }\n\n    window.addEventListener(\"keydown\", onKeyDown);\n    return () => {\n      window.removeEventListener(\"keydown\", onKeyDown);\n    };\n  }, [update]);\n}\n","import React from \"react\";\nimport { clamp } from \"../utils\";\nimport { State } from \"../types\";\n\nexport default function useFocusEvents(\n  stateRef: React.MutableRefObject<State>,\n  wrapperRef: React.MutableRefObject<HTMLDivElement>,\n  planeRef: React.MutableRefObject<HTMLDivElement>,\n  update: Function\n) {\n  React.useEffect(() => {\n    function onFocus(event: FocusEvent) {\n      const wrapper = wrapperRef.current;\n      const plane = planeRef.current;\n      if (wrapper === null) return;\n      if (plane === null) return;\n      const element = event.target as HTMLElement;\n      const offsetLeft = Math.max(\n        0,\n        (element.offsetLeft ?? 0) - wrapper.offsetWidth\n      );\n      const offsetTop = Math.max(\n        0,\n        (element.offsetTop ?? 0) - wrapper.offsetHeight\n      );\n      const maxX = plane.offsetWidth - wrapper.offsetWidth;\n      const maxY = plane.offsetHeight - wrapper.offsetHeight;\n\n      if (offsetLeft) {\n        stateRef.current.progress.x = clamp(\n          (1 / maxX) * (offsetLeft + element.offsetWidth),\n          0,\n          1\n        );\n        if (stateRef.current.progress.x >= 0.99) {\n          stateRef.current.progress.x = 1;\n        }\n      }\n\n      if (offsetTop) {\n        stateRef.current.progress.y = clamp(\n          (1 / maxY) * (offsetTop + element.offsetHeight),\n          0,\n          1\n        );\n        if (stateRef.current.progress.y >= 0.99) {\n          stateRef.current.progress.y = 1;\n        }\n      }\n\n      update();\n    }\n\n    window.addEventListener(\"focus\", onFocus, { capture: true });\n    return () => {\n      window.removeEventListener(\"focus\", onFocus, { capture: true });\n    };\n  }, [update]);\n}\n","import React from \"react\";\nimport { clamp } from \"../utils\";\nimport { State, Touch } from \"../types\";\n\nexport default function useMouseEvents(\n  stateRef: React.MutableRefObject<State>,\n  wrapperRef: React.MutableRefObject<HTMLDivElement>,\n  scrollBarHandleXRef: React.MutableRefObject<HTMLDivElement>,\n  scrollBarHandleYRef: React.MutableRefObject<HTMLDivElement>,\n  update: Function\n) {\n  React.useEffect(() => {\n    let dragging = false;\n    let startX = 0;\n    let startY = 0;\n    let offsetX = 0;\n    let offsetY = 0;\n\n    function onMouseDown(event: MouseEvent) {\n      dragging = true;\n      startX = event.pageX - wrapperRef.current.offsetLeft;\n      startY = event.pageY - wrapperRef.current.offsetTop;\n      offsetX = Math.abs(startX - scrollBarHandleXRef.current.offsetLeft);\n      offsetY = Math.abs(startY - scrollBarHandleYRef.current.offsetTop);\n    }\n\n    function onMouseMove(event: MouseEvent) {\n      if (!dragging) return;\n\n      const x = event.pageX - wrapperRef.current.offsetLeft - offsetX;\n      const y = event.pageY - wrapperRef.current.offsetTop - offsetY;\n\n      const maxX =\n        wrapperRef.current.offsetHeight -\n        scrollBarHandleXRef.current.offsetWidth;\n      const maxY =\n        wrapperRef.current.offsetHeight -\n        scrollBarHandleYRef.current.offsetHeight;\n\n      const progressX = (1 / maxX) * x;\n      const progressY = (1 / maxY) * y;\n\n      stateRef.current.progress.x = clamp(progressX, 0, 1);\n      stateRef.current.progress.y = clamp(progressY, 0, 1);\n      stateRef.current.isScrolling = true;\n      update();\n    }\n\n    function onMouseUp() {\n      dragging = false;\n    }\n\n    scrollBarHandleXRef.current.addEventListener(\"mousedown\", onMouseDown);\n    scrollBarHandleYRef.current.addEventListener(\"mousedown\", onMouseDown);\n    window.addEventListener(\"mousemove\", onMouseMove);\n    window.addEventListener(\"mouseup\", onMouseUp);\n  }, [update]);\n}\n","import ScrollRig from \"./scroll-rig\";\n\nexport * from \"./types\";\n\nexport default ScrollRig;\n"],"names":["Wrapper","styled","Box","NativeComparison","onScrollUpdate","state","console","log","progress","y","Array","from","length","map","_","index","key","native","className","ScrollWrapper","ScrollPlane","ScrollBarHandle","ScrollBar","axis","size","css","ScrollBars","clamp","value","min","max","Math","DEFAULT_STYLE","ScrollRig","children","scrollBarSize","style","controlled","classNamePrefix","props","ref","touchRef","React","down","lastX","lastY","currentX","currentY","stateRef","maxScroll","x","wrapperSize","width","height","scroll","isScrolling","wrapperRef","planeRef","scrollBarsRef","scrollBarXRef","scrollBarYRef","scrollBarHandleXRef","scrollBarHandleYRef","update","wrapper","current","plane","scrollBarX","scrollBarY","scrollBarHandleX","scrollBarHandleY","scrollTop","scrollLeft","offsetWidth","offsetHeight","scrollWidth","scrollHeight","display","left","transform","top","paddingRight","paddingBottom","maxHeight","maxWidth","offsetX","offsetY","scrollOffsetX","scrollOffsetY","translate","onScrollUpdateRef","onScrollHandleRef","updateProgress","dirX","dirY","distX","distY","maxX","maxY","velocityX","velocityY","handleScroll","onScroll","nextFrame","tick","requestAnimationFrame","cancelAnimationFrame","onWheel","event","element","target","deltaX","sign","deltaY","abs","contains","window","addEventListener","removeEventListener","useWheelEvents","onTouchStart","pageX","pageY","touches","onTouchMove","touch","onTouchEnd","useTouchEvents","onKeyDown","metaKey","useKeyEvents","onFocus","offsetLeft","offsetTop","capture","useFocusEvents","dragging","startX","startY","onMouseDown","progressX","progressY","useMouseEvents","overflow","undefined"],"sourceRoot":""}