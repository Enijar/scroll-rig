{"version":3,"file":"295.36138933.chunk.js","mappings":"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","sources":["webpack://scroll-rig/./demo/examples/scroll-trigger/styles.ts","webpack://scroll-rig/./demo/examples/scroll-trigger/scroll-trigger.tsx","webpack://scroll-rig/./lib/styles.ts","webpack://scroll-rig/./lib/utils.ts","webpack://scroll-rig/./lib/scroll-rig.tsx","webpack://scroll-rig/./lib/hooks/use-wheel-events.ts","webpack://scroll-rig/./lib/hooks/use-touch-events.ts","webpack://scroll-rig/./lib/hooks/use-key-events.ts","webpack://scroll-rig/./lib/hooks/use-focus-events.ts","webpack://scroll-rig/./lib/hooks/use-mouse-events.ts","webpack://scroll-rig/./lib/index.tsx"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n  display: flex;\n  height: 100%;\n\n  h2 {\n    text-align: center;\n    line-height: 1em;\n\n    small {\n      font-size: 0.6em;\n    }\n  }\n`;\n\nexport const Box = styled.div`\n  height: 50vh;\n  aspect-ratio: 1 / 1;\n  background-color: hsl(0, 50%, 50%);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  color: #fefefe;\n  margin-bottom: 1em;\n  margin-left: auto;\n  margin-right: auto;\n\n  :last-child {\n    margin-bottom: 0;\n  }\n`;\n","import React from \"react\";\nimport { Box, Wrapper } from \"./styles\";\nimport ScrollRig, { State } from \"../../../lib\";\n\nexport default function ScrollTrigger() {\n  const boxRefs = React.useRef<HTMLElement[]>([]);\n\n  const onScrollUpdate = React.useCallback((state: State) => {\n    let i = 0;\n    for (const boxRef of boxRefs.current) {\n      const { top } = boxRef.getBoundingClientRect();\n      const offset = (20 / state.maxScroll.y) * Math.abs(top);\n      const hue = (360 / offset) * state.progress.y;\n      boxRef.style.backgroundColor = `hsl(${hue}, 50%, 50%)`;\n      i++;\n    }\n  }, []);\n\n  return (\n    <Wrapper>\n      <ScrollRig onScrollUpdate={onScrollUpdate}>\n        <h2>Custom Scroll 👇</h2>\n        {Array.from({ length: 10 }).map((_, index) => {\n          return (\n            <Box\n              key={index}\n              ref={(ref) => {\n                boxRefs.current[index] = ref;\n              }}\n            >\n              {index}\n            </Box>\n          );\n        })}\n      </ScrollRig>\n    </Wrapper>\n  );\n}\n","import styled, { css } from \"styled-components\";\n\nexport const ScrollWrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  position: relative;\n`;\n\nexport const ScrollPlane = styled.div`\n  will-change: transform;\n  white-space: nowrap;\n`;\n\ntype ScrollBarsProps = {\n  size: string;\n};\n\nexport const ScrollBarHandle = styled.div`\n  will-change: transform;\n  background-color: #c7c7c7;\n  position: relative;\n  min-height: 2em;\n  border-radius: 2em;\n`;\n\ntype ScrollBarProps = {\n  axis: \"x\" | \"y\";\n  size: string;\n};\n\nexport const ScrollBar = styled.div<ScrollBarProps>`\n  pointer-events: all;\n  background-color: #fafafa;\n\n  :hover {\n    ${ScrollBarHandle} {\n      background-color: #878787;\n    }\n  }\n\n  ${({ axis, size }) => {\n    if (axis === \"x\") {\n      return css`\n        width: 100%;\n        height: ${size};\n        margin-top: auto;\n        padding-left: calc(${size} / 4);\n        padding-right: calc(${size} / 4);\n\n        ${ScrollBarHandle} {\n          min-height: calc(100% - (${size} / 2));\n          width: 0;\n          margin-top: auto;\n          margin-bottom: auto;\n        }\n      `;\n    }\n    return css`\n      height: 100%;\n      width: ${size};\n      margin-left: auto;\n      padding-top: calc(${size} / 4);\n      padding-bottom: calc(${size} / 4);\n\n      ${ScrollBarHandle} {\n        width: calc(100% - (${size} / 2));\n        height: 0;\n        margin-left: auto;\n        margin-right: auto;\n      }\n    `;\n  }}\n`;\n\nexport const ScrollBars = styled.div<ScrollBarsProps>`\n  position: absolute;\n  pointer-events: none;\n  user-select: none;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n`;\n","export function clamp(value: number, min: number, max: number): number {\n  return Math.min(Math.max(value, min), max);\n}\n\nexport function map(\n  value: number,\n  x1: number,\n  y1: number,\n  x2: number,\n  y2: number\n): number {\n  return ((value - x1) * (y2 - x2)) / (y1 - x1) + x2;\n}\n","import React from \"react\";\nimport {\n  ScrollBar,\n  ScrollBarHandle,\n  ScrollBars,\n  ScrollPlane,\n  ScrollWrapper,\n} from \"./styles\";\nimport { Props, State, Touch, OnScroll, ScrollApi } from \"./types\";\nimport { clamp } from \"./utils\";\nimport useKeyEvents from \"./hooks/use-key-events\";\nimport useTouchEvents from \"./hooks/use-touch-events\";\nimport useFocusEvents from \"./hooks/use-focus-events\";\nimport useMouseEvents from \"./hooks/use-mouse-events\";\nimport useWheelEvents from \"./hooks/use-wheel-events\";\n\nconst DEFAULT_STYLE = {};\n\nfunction ScrollRig(\n  {\n    children,\n    native = false,\n    scrollBarSize = \"15px\",\n    style = DEFAULT_STYLE,\n    controlled = false,\n    onScrollUpdate,\n    classNamePrefix = \"scroll-rig\",\n    ...props\n  }: Props,\n  ref: React.ForwardedRef<ScrollApi>\n) {\n  const touchRef = React.useRef<Touch>({\n    down: false,\n    lastX: 0,\n    lastY: 0,\n    currentX: 0,\n    currentY: 0,\n  });\n\n  const stateRef = React.useRef<State>({\n    maxScroll: {\n      x: 0,\n      y: 0,\n    },\n    wrapperSize: {\n      width: 0,\n      height: 0,\n    },\n    progress: {\n      x: 0,\n      y: 0,\n    },\n    scroll: {\n      x: 0,\n      y: 0,\n    },\n    isScrolling: false,\n  });\n\n  const wrapperRef = React.useRef<HTMLDivElement>(null);\n  const planeRef = React.useRef<HTMLDivElement>(null);\n  const scrollBarsRef = React.useRef<HTMLDivElement>(null);\n  const scrollBarXRef = React.useRef<HTMLDivElement>(null);\n  const scrollBarYRef = React.useRef<HTMLDivElement>(null);\n  const scrollBarHandleXRef = React.useRef<HTMLDivElement>(null);\n  const scrollBarHandleYRef = React.useRef<HTMLDivElement>(null);\n\n  const update = React.useCallback(() => {\n    const wrapper = wrapperRef.current;\n    const plane = planeRef.current;\n    const scrollBarX = scrollBarXRef.current;\n    const scrollBarY = scrollBarYRef.current;\n    const scrollBarHandleX = scrollBarHandleXRef.current;\n    const scrollBarHandleY = scrollBarHandleYRef.current;\n\n    if (native) return;\n    if (plane === null) return;\n    if (scrollBarX === null) return;\n    if (scrollBarY === null) return;\n\n    wrapper.scrollTop = 0;\n    wrapper.scrollLeft = 0;\n    stateRef.current.wrapperSize.width = wrapper.offsetWidth;\n    stateRef.current.wrapperSize.height = wrapper.offsetHeight;\n    stateRef.current.maxScroll.x = Math.max(\n      0,\n      plane.scrollWidth - wrapper.offsetWidth\n    );\n    stateRef.current.maxScroll.y = Math.max(\n      0,\n      plane.scrollHeight - wrapper.offsetHeight\n    );\n    scrollBarX.style.display =\n      stateRef.current.maxScroll.x === 0 ? \"none\" : \"flex\";\n    scrollBarY.style.display =\n      stateRef.current.maxScroll.y === 0 ? \"none\" : \"flex\";\n\n    if (stateRef.current.maxScroll.x > 0) {\n      scrollBarHandleX.style.left = `${stateRef.current.progress.x * 100}%`;\n      scrollBarHandleX.style.transform = `translateX(${\n        stateRef.current.progress.x * -100\n      }%)`;\n      scrollBarHandleX.style.width = `${\n        (wrapper.offsetWidth /\n          (stateRef.current.maxScroll.x + wrapper.offsetWidth)) *\n        100\n      }%`;\n    }\n\n    if (stateRef.current.maxScroll.y > 0) {\n      scrollBarHandleY.style.top = `${stateRef.current.progress.y * 100}%`;\n      scrollBarHandleY.style.transform = `translateY(${\n        stateRef.current.progress.y * -100\n      }%)`;\n      scrollBarHandleY.style.height = `${\n        (wrapper.offsetHeight /\n          (stateRef.current.maxScroll.y + wrapper.offsetHeight)) *\n        100\n      }%`;\n    }\n\n    scrollBarX.style.transform =\n      stateRef.current.maxScroll.x === 0\n        ? \"none\"\n        : `translateY(-${scrollBarSize})`;\n\n    scrollBarX.style.paddingRight =\n      stateRef.current.maxScroll.y === 0 ? \"0px\" : scrollBarSize;\n    scrollBarY.style.paddingBottom =\n      stateRef.current.maxScroll.x === 0\n        ? `calc(${scrollBarSize} / 4)`\n        : scrollBarSize;\n\n    plane.style.maxHeight =\n      stateRef.current.maxScroll.x === 0\n        ? \"unset\"\n        : `calc(100% - ${scrollBarSize})`;\n    plane.style.maxWidth =\n      stateRef.current.maxScroll.y === 0\n        ? \"unset\"\n        : `calc(100% - ${scrollBarSize})`;\n\n    const offsetX =\n      stateRef.current.wrapperSize.width * stateRef.current.progress.x;\n    const offsetY =\n      stateRef.current.wrapperSize.height * stateRef.current.progress.y;\n    const scrollOffsetX =\n      stateRef.current.maxScroll.y > 0 ? scrollBarSize : \"0px\";\n    const scrollOffsetY =\n      stateRef.current.maxScroll.x > 0 ? scrollBarSize : \"0px\";\n    const translate = {\n      x:\n        stateRef.current.maxScroll.x === 0\n          ? \"0px\"\n          : `(${stateRef.current.progress.x} * -100%) + ${offsetX}px - ${scrollOffsetX}`,\n      y:\n        stateRef.current.maxScroll.y === 0\n          ? \"0px\"\n          : `(${stateRef.current.progress.y} * -100%) + ${offsetY}px - ${scrollOffsetY}`,\n    };\n    plane.style.transform = `translate3d(calc(${translate.x}), calc(${translate.y}), 0px)`;\n\n    stateRef.current.scroll.x =\n      stateRef.current.progress.x * stateRef.current.maxScroll.x;\n    stateRef.current.scroll.y =\n      stateRef.current.progress.y * stateRef.current.maxScroll.y;\n\n    // Call user scroll listener(s)\n    if (stateRef.current.isScrolling) {\n      if (onScrollUpdateRef.current) {\n        onScrollUpdateRef.current(stateRef.current);\n      }\n      if (onScrollHandleRef.current !== null) {\n        onScrollHandleRef.current(stateRef.current);\n      }\n    }\n\n    stateRef.current.isScrolling = false;\n  }, [controlled, native]);\n\n  const updateProgress = React.useCallback(\n    (dirX: number, dirY: number, distX: number, distY: number) => {\n      const state = stateRef.current;\n      const maxX = state.maxScroll.x;\n      const maxY = state.maxScroll.y;\n      const velocityX = dirX === 0 ? 0 : (1 / maxX) * distX * dirX;\n      const velocityY = dirY === 0 ? 0 : (1 / maxY) * distY * dirY;\n      state.progress.x = clamp(state.progress.x + velocityX, 0, 1);\n      state.progress.y = clamp(state.progress.y + velocityY, 0, 1);\n      update();\n    },\n    []\n  );\n\n  const onScrollUpdateRef = React.useRef(onScrollUpdate);\n  React.useEffect(() => {\n    onScrollUpdateRef.current = onScrollUpdate;\n  }, [onScrollUpdate]);\n\n  const onScrollHandleRef = React.useRef<OnScroll | null>(null);\n\n  const handleScroll = React.useCallback((onScroll: OnScroll) => {\n    onScrollHandleRef.current = onScroll;\n  }, []);\n\n  React.useEffect(() => {\n    if (ref === null) return;\n    (ref as React.MutableRefObject<ScrollApi>).current = {\n      update,\n      onScroll: handleScroll,\n      state: stateRef.current,\n    };\n  }, [ref, update, handleScroll]);\n\n  React.useEffect(() => {\n    const wrapper = wrapperRef.current;\n    if (!native) return;\n    wrapper.scrollLeft =\n      (wrapper.scrollWidth - wrapper.offsetWidth) * stateRef.current.progress.x;\n    wrapper.scrollTop =\n      (wrapper.scrollHeight - wrapper.offsetHeight) *\n      stateRef.current.progress.y;\n    update();\n  }, [native, update]);\n\n  React.useEffect(() => {\n    if (controlled) return;\n\n    let nextFrame: number;\n    (function tick() {\n      nextFrame = requestAnimationFrame(tick);\n      update();\n    })();\n\n    return () => cancelAnimationFrame(nextFrame);\n  }, [native, controlled, update]);\n\n  useWheelEvents(stateRef, wrapperRef, planeRef, native, updateProgress);\n  useTouchEvents(stateRef, wrapperRef, planeRef, touchRef, updateProgress);\n  useKeyEvents(stateRef, update);\n  useFocusEvents(stateRef, wrapperRef, planeRef, update);\n  useMouseEvents(\n    stateRef,\n    wrapperRef,\n    scrollBarHandleXRef,\n    scrollBarHandleYRef,\n    update\n  );\n\n  return (\n    <ScrollWrapper\n      {...props}\n      ref={wrapperRef}\n      style={{ overflow: native ? \"auto\" : \"hidden\" }}\n      className={classNamePrefix}\n    >\n      <ScrollPlane\n        className={`${classNamePrefix}-plane`}\n        ref={planeRef}\n        style={{ ...style, transform: native ? \"none\" : undefined }}\n      >\n        {children}\n      </ScrollPlane>\n      <ScrollBars\n        className={`${classNamePrefix}-scroll-bars`}\n        ref={scrollBarsRef}\n        size={scrollBarSize}\n        style={{ display: native ? \"none\" : undefined }}\n      >\n        <ScrollBar\n          className={`${classNamePrefix}-scroll-bar ${classNamePrefix}-scroll-bar-y`}\n          axis=\"y\"\n          size={scrollBarSize}\n          ref={scrollBarYRef}\n        >\n          <ScrollBarHandle\n            className={`${classNamePrefix}-scroll-bar-handle ${classNamePrefix}-scroll-bar-handle-y`}\n            ref={scrollBarHandleYRef}\n          />\n        </ScrollBar>\n        <ScrollBar\n          className={`${classNamePrefix}-scroll-bar ${classNamePrefix}-scroll-bar-x`}\n          axis=\"x\"\n          size={scrollBarSize}\n          ref={scrollBarXRef}\n        >\n          <ScrollBarHandle\n            className={`${classNamePrefix}-scroll-bar-handle ${classNamePrefix}-scroll-bar-handle-x`}\n            ref={scrollBarHandleXRef}\n          />\n        </ScrollBar>\n      </ScrollBars>\n    </ScrollWrapper>\n  );\n}\n\nexport default React.forwardRef(ScrollRig);\n","import React from \"react\";\nimport { State } from \"../types\";\n\nexport default function useWheelEvents(\n  stateRef: React.MutableRefObject<State>,\n  wrapperRef: React.MutableRefObject<HTMLDivElement>,\n  planeRef: React.MutableRefObject<HTMLDivElement>,\n  native: boolean,\n  updateProgress: Function\n) {\n  React.useEffect(() => {\n    function onWheel(event: WheelEvent) {\n      if (native) return;\n      if (planeRef.current === null) return;\n      const element = event.target as HTMLElement;\n      const dirX = event.deltaX === 0 ? 0 : Math.sign(event.deltaX);\n      const dirY = event.deltaY === 0 ? 0 : Math.sign(event.deltaY);\n      const distX = Math.abs(event.deltaX);\n      const distY = Math.abs(event.deltaY);\n      if (\n        element === planeRef.current ||\n        element === wrapperRef.current ||\n        wrapperRef.current.contains(element)\n      ) {\n        stateRef.current.isScrolling = true;\n        updateProgress(dirX, dirY, distX, distY);\n      }\n    }\n\n    window.addEventListener(\"wheel\", onWheel);\n    return () => {\n      window.removeEventListener(\"wheel\", onWheel);\n    };\n  }, [native, updateProgress]);\n}\n","import React from \"react\";\nimport { State, Touch } from \"../types\";\n\nexport default function useTouchEvents(\n  stateRef: React.MutableRefObject<State>,\n  wrapperRef: React.MutableRefObject<HTMLDivElement>,\n  planeRef: React.MutableRefObject<HTMLDivElement>,\n  touchRef: React.MutableRefObject<Touch>,\n  updateProgress: Function\n) {\n  React.useEffect(() => {\n    function onTouchStart(event: TouchEvent) {\n      if (wrapperRef.current === null || planeRef.current === null) return;\n      const element = event.target as HTMLElement;\n      if (\n        element === planeRef.current ||\n        element === wrapperRef.current ||\n        wrapperRef.current.contains(element)\n      ) {\n        const { pageX, pageY } = event.touches[0] ?? {};\n        touchRef.current.down = true;\n        touchRef.current.lastX = pageX;\n        touchRef.current.lastY = pageY;\n      }\n    }\n\n    function onTouchMove(event: TouchEvent) {\n      if (!touchRef.current.down) return;\n      const touch = touchRef.current;\n      const { pageX, pageY } = event.touches[0] ?? {};\n      touch.currentX = pageX;\n      touch.currentY = pageY;\n      const deltaX = touch.lastX - touch.currentX;\n      const deltaY = touch.lastY - touch.currentY;\n      const dirX = deltaX === 0 ? 0 : Math.sign(deltaX);\n      const dirY = deltaY === 0 ? 0 : Math.sign(deltaY);\n      const distX = Math.abs(deltaX);\n      const distY = Math.abs(deltaY);\n      stateRef.current.isScrolling = true;\n      updateProgress(dirX, dirY, distX, distY);\n      touch.lastX = pageX;\n      touch.lastY = pageY;\n    }\n\n    function onTouchEnd() {\n      touchRef.current.down = false;\n    }\n\n    window.addEventListener(\"touchstart\", onTouchStart);\n    window.addEventListener(\"touchmove\", onTouchMove);\n    window.addEventListener(\"touchend\", onTouchEnd);\n    return () => {\n      window.removeEventListener(\"touchstart\", onTouchStart);\n      window.removeEventListener(\"touchmove\", onTouchMove);\n      window.removeEventListener(\"touchend\", onTouchEnd);\n    };\n  }, [updateProgress]);\n}\n","import React from \"react\";\nimport { State } from \"../types\";\n\nexport default function useKeyEvents(\n  stateRef: React.MutableRefObject<State>,\n  update: Function\n) {\n  React.useEffect(() => {\n    function onKeyDown(event: KeyboardEvent) {\n      if (!event.metaKey) return;\n      switch (event.key) {\n        case \"ArrowRight\":\n          stateRef.current.progress.x = 1;\n          break;\n        case \"ArrowLeft\":\n          stateRef.current.progress.x = 0;\n          break;\n        case \"ArrowDown\":\n          stateRef.current.progress.y = 1;\n          break;\n        case \"ArrowUp\":\n          stateRef.current.progress.y = 0;\n          break;\n      }\n      update();\n    }\n\n    window.addEventListener(\"keydown\", onKeyDown);\n    return () => {\n      window.removeEventListener(\"keydown\", onKeyDown);\n    };\n  }, [update]);\n}\n","import React from \"react\";\nimport { clamp } from \"../utils\";\nimport { State } from \"../types\";\n\nexport default function useFocusEvents(\n  stateRef: React.MutableRefObject<State>,\n  wrapperRef: React.MutableRefObject<HTMLDivElement>,\n  planeRef: React.MutableRefObject<HTMLDivElement>,\n  update: Function\n) {\n  React.useEffect(() => {\n    function onFocus(event: FocusEvent) {\n      const wrapper = wrapperRef.current;\n      const plane = planeRef.current;\n      if (wrapper === null) return;\n      if (plane === null) return;\n      const element = event.target as HTMLElement;\n      const offsetLeft = Math.max(\n        0,\n        (element.offsetLeft ?? 0) - wrapper.offsetWidth\n      );\n      const offsetTop = Math.max(\n        0,\n        (element.offsetTop ?? 0) - wrapper.offsetHeight\n      );\n      const maxX = plane.offsetWidth - wrapper.offsetWidth;\n      const maxY = plane.offsetHeight - wrapper.offsetHeight;\n\n      if (offsetLeft) {\n        stateRef.current.progress.x = clamp(\n          (1 / maxX) * (offsetLeft + element.offsetWidth),\n          0,\n          1\n        );\n        if (stateRef.current.progress.x >= 0.99) {\n          stateRef.current.progress.x = 1;\n        }\n      }\n\n      if (offsetTop) {\n        stateRef.current.progress.y = clamp(\n          (1 / maxY) * (offsetTop + element.offsetHeight),\n          0,\n          1\n        );\n        if (stateRef.current.progress.y >= 0.99) {\n          stateRef.current.progress.y = 1;\n        }\n      }\n\n      update();\n    }\n\n    window.addEventListener(\"focus\", onFocus, { capture: true });\n    return () => {\n      window.removeEventListener(\"focus\", onFocus, { capture: true });\n    };\n  }, [update]);\n}\n","import React from \"react\";\nimport { clamp } from \"../utils\";\nimport { State, Touch } from \"../types\";\n\nexport default function useMouseEvents(\n  stateRef: React.MutableRefObject<State>,\n  wrapperRef: React.MutableRefObject<HTMLDivElement>,\n  scrollBarHandleXRef: React.MutableRefObject<HTMLDivElement>,\n  scrollBarHandleYRef: React.MutableRefObject<HTMLDivElement>,\n  update: Function\n) {\n  React.useEffect(() => {\n    let dragging = false;\n    let startX = 0;\n    let startY = 0;\n    let offsetX = 0;\n    let offsetY = 0;\n\n    function onMouseDown(event: MouseEvent) {\n      dragging = true;\n      startX = event.pageX - wrapperRef.current.offsetLeft;\n      startY = event.pageY - wrapperRef.current.offsetTop;\n      offsetX = Math.abs(startX - scrollBarHandleXRef.current.offsetLeft);\n      offsetY = Math.abs(startY - scrollBarHandleYRef.current.offsetTop);\n    }\n\n    function onMouseMove(event: MouseEvent) {\n      if (!dragging) return;\n\n      const x = event.pageX - wrapperRef.current.offsetLeft - offsetX;\n      const y = event.pageY - wrapperRef.current.offsetTop - offsetY;\n\n      const maxX =\n        wrapperRef.current.offsetHeight -\n        scrollBarHandleXRef.current.offsetWidth;\n      const maxY =\n        wrapperRef.current.offsetHeight -\n        scrollBarHandleYRef.current.offsetHeight;\n\n      const progressX = (1 / maxX) * x;\n      const progressY = (1 / maxY) * y;\n\n      stateRef.current.progress.x = clamp(progressX, 0, 1);\n      stateRef.current.progress.y = clamp(progressY, 0, 1);\n      stateRef.current.isScrolling = true;\n      update();\n    }\n\n    function onMouseUp() {\n      dragging = false;\n    }\n\n    scrollBarHandleXRef.current.addEventListener(\"mousedown\", onMouseDown);\n    scrollBarHandleYRef.current.addEventListener(\"mousedown\", onMouseDown);\n    window.addEventListener(\"mousemove\", onMouseMove);\n    window.addEventListener(\"mouseup\", onMouseUp);\n  }, [update]);\n}\n","import ScrollRig from \"./scroll-rig\";\n\nexport * from \"./types\";\n\nexport default ScrollRig;\n"],"names":["Wrapper","styled","Box","ScrollTrigger","boxRefs","React","onScrollUpdate","state","boxRef","current","top","getBoundingClientRect","hue","maxScroll","y","Math","abs","progress","style","backgroundColor","Array","from","length","map","_","index","key","ref","ScrollWrapper","ScrollPlane","ScrollBarHandle","ScrollBar","axis","size","css","ScrollBars","clamp","value","min","max","DEFAULT_STYLE","ScrollRig","children","native","scrollBarSize","controlled","classNamePrefix","props","touchRef","down","lastX","lastY","currentX","currentY","stateRef","x","wrapperSize","width","height","scroll","isScrolling","wrapperRef","planeRef","scrollBarsRef","scrollBarXRef","scrollBarYRef","scrollBarHandleXRef","scrollBarHandleYRef","update","wrapper","plane","scrollBarX","scrollBarY","scrollBarHandleX","scrollBarHandleY","scrollTop","scrollLeft","offsetWidth","offsetHeight","scrollWidth","scrollHeight","display","left","transform","paddingRight","paddingBottom","maxHeight","maxWidth","offsetX","offsetY","scrollOffsetX","scrollOffsetY","translate","onScrollUpdateRef","onScrollHandleRef","updateProgress","dirX","dirY","distX","distY","maxX","maxY","velocityX","velocityY","handleScroll","onScroll","nextFrame","tick","requestAnimationFrame","cancelAnimationFrame","onWheel","event","element","target","deltaX","sign","deltaY","contains","window","addEventListener","removeEventListener","useWheelEvents","onTouchStart","pageX","pageY","touches","onTouchMove","touch","onTouchEnd","useTouchEvents","onKeyDown","metaKey","useKeyEvents","onFocus","offsetLeft","offsetTop","capture","useFocusEvents","dragging","startX","startY","onMouseDown","progressX","progressY","useMouseEvents","overflow","className","undefined"],"sourceRoot":""}